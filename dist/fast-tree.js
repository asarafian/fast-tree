!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.FastTree=t():e.FastTree=t()}(window,(function(){return function(e){var t={};function n(s){if(t[s])return t[s].exports;var o=t[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(s,o,function(t){return e[t]}.bind(null,o));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){var s=n(1);s.__esModule&&(s=s.default),"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);(0,n(4).default)("54f20205",s,!1,{})},function(e,t,n){(t=n(2)(!0)).push([e.i,"\n.small-tree-indent[data-v-ff1265b4] {\n    margin: 0 3px;\n    display: inline-block;\n}\n.icon-hover[data-v-ff1265b4] {\n    visibility: hidden;\n    opacity: 0;\n    transition: all .2s ease-in-out;\n}\n.row_data:hover .icon-hover[data-v-ff1265b4]{\n    visibility: visible;\n    opacity: 1;\n}\n.capitalize[data-v-ff1265b4] {\n    text-transform: capitalize;\n}\n.badge[data-v-ff1265b4] {\n    font-size: 12px;\n    font-weight: normal;\n}\nli[data-v-ff1265b4] {\n    list-style: none;\n}\n.icon_parent[data-v-ff1265b4] {\n    background: transparent;\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n    vertical-align: middle;\n    text-align: center;\n    margin: 0 2px 0 0;\n}\n.icon_parent i[data-v-ff1265b4] {\n    font-size: 16px;\n    line-height: 10px;\n}\n.expanded_icon[data-v-ff1265b4] {\n    transform: rotate(0deg);\n    transition: all ease .2s;\n    display: inline-block;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 4px 0 4px 8px;\n    border-color: transparent transparent transparent #FFF;\n}\n.expanded_icon.expanded[data-v-ff1265b4] {\n    transform: rotate(90deg);\n}\n.add_icon[data-v-ff1265b4]:before {\n    content: '\\002b';\n}\n.delete_icon[data-v-ff1265b4]:before {\n    content: '\\00d7';\n}\n.circle_icon[data-v-ff1265b4]:before {\n    content: '\\2B24';\n}\n.tag_icon[data-v-ff1265b4]:before {\n    content: '\\25C0';\n}\n.bars_icon[data-v-ff1265b4]:before {\n    content: '\\2630';\n}\n.reference_icon[data-v-ff1265b4]:before {\n    content: '\\1F5D8';\n}\n.method_icon[data-v-ff1265b4]:before {\n    content: '\\02A0D';\n}\n.folder_icon[data-v-ff1265b4]:before {\n    content: '\\1F5C0';\n}\n.folder_icon_active[data-v-ff1265b4]:before {\n    content: '\\1F5C1';\n}\n","",{version:3,sources:["src/TreeRow.vue","TreeRow.vue"],names:[],mappings:";AAmWA;IACA,aAAA;IACA,qBAAA;ACjWA;ADmWA;IACA,kBAAA;IACA,UAAA;IACA,+BAAA;ACjWA;ADmWA;IACA,mBAAA;IACA,UAAA;ACjWA;ADmWA;IACA,0BAAA;ACjWA;ADmWA;IACA,eAAA;IACA,mBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,uBAAA;IACA,WAAA;IACA,YAAA;IACA,qBAAA;IACA,sBAAA;IACA,kBAAA;IACA,iBAAA;ACjWA;ADmWA;IACA,eAAA;IACA,iBAAA;ACjWA;ADmWA;IACA,uBAAA;IACA,wBAAA;IACA,qBAAA;IACA,QAAA;IACA,SAAA;IACA,mBAAA;IACA,2BAAA;IACA,sDAAA;ACjWA;ADmWA;IACA,wBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA",file:"TreeRow.vue",sourcesContent:['<template>\r\n    <li\r\n            class="node"\r\n            :data-id="node.id"\r\n            :style="styles.row.style">\r\n        <div\r\n                :class="[\'row_data\', selected ? styles.row.child.active.class: styles.row.child.class]"\r\n                :style="selected ? styles.row.child.active.style : styles.row.child.style"\r\n                @click="toggleEvent(\'selected\', node)"\r\n                @contextmenu.stop="toggleEvent(\'context\', node, $event)">\r\n      <span @click.stop="options.events.expanded.state == true && node.nodes != undefined && node.nodes.length > 0 && toggleEvent(\'expanded\', node)">\r\n        <i\r\n                v-if="options.events.expanded.state == true && node.nodes != undefined && node.nodes.length > 0"\r\n                :class="[{\'expanded\': expanded == true}, styles.expanded.class]">\r\n        </i>\r\n        <span\r\n                v-else-if="options.events.expanded.state == true && node.nodes == undefined"\r\n                class="small-tree-indent">\r\n        </span>\r\n      </span>\r\n            <i\r\n                    v-if="options.events.selected.state == true"\r\n                    @click.stop="toggleEvent(\'selected\', node)"\r\n                    :class="node.nodeIcon.class"\r\n                    :style="{ color: node.nodeIcon.color }"\r\n            >\r\n            </i>\r\n            <input\r\n                    type="checkbox"\r\n                    name="item[]"\r\n                    :data-id="node.id"\r\n                    :checked="checked"\r\n                    v-if="options.events.checked.state == true"\r\n                    @click.stop="toggleEvent(\'checked\', node)"\r\n            >\r\n            <span\r\n                    data-toggle="tooltip"\r\n                    data-placement="top"\r\n                    :title="node.definition"\r\n                    v-bind:class="[{\'selected\': selected}, styles.text.class]"\r\n                    :style="selected ? styles.text.active.style : styles.text.style"\r\n                    @click.stop="toggleEvent(\'selected\', node)" >\r\n                    {{ node.text }}\r\n            </span>\r\n            <span\r\n                    v-if="options.addNode.state == true"\r\n                    @click.stop="options.addNode.fn(node)"\r\n                    class="icon_parent">\r\n        <i\r\n                v-bind:class="[{\'icon-hover\': options.addNode.appearOnHover}, styles.addNode.class]"\r\n                :style="styles.addNode.style">\r\n        </i>\r\n      </span>\r\n            <span\r\n                    v-if="options.deleteNode.state == true"\r\n                    @click.stop="options.deleteNode.fn(node)"\r\n                    class="icon_parent">\r\n        <i\r\n                v-bind:class="[{\'icon-hover\': options.deleteNode.appearOnHover}, styles.deleteNode.class]"\r\n                :style="styles.deleteNode.style">\r\n        </i>\r\n      </span>\r\n            <span v-if="options.showTags == true && node.tags">\r\n        <span\r\n                v-if="node.tags[0] != undefined && node.tags[0]!= null && node.tags[0]"\r\n                class="badge">\r\n          {{ node.tags[0] }}\r\n        </span>\r\n      </span>\r\n        </div>\r\n        <ul v-if="expanded" :style="styles.rowIndent">\r\n            <tree-row\r\n                    v-for="child in node.nodes"\r\n                    :ref="\'tree-row-\' + child.id"\r\n                    :custom-options="customOptions"\r\n                    :custom-styles="customStyles"\r\n                    :depth="depth + 1"\r\n                    :key="child.id"\r\n                    :node="child"\r\n                    :parent-node="node"\r\n                    v-on:emitNodeChecked="emitNodeChecked"\r\n                    v-on:emitNodeContext="emitNodeContext"\r\n                    v-on:emitNodeExpanded="emitNodeExpanded"\r\n                    v-on:emitNodeSelected="emitNodeSelected">\r\n            </tree-row>\r\n        </ul>\r\n    </li>\r\n</template>\r\n\r\n<script type="text/javascript">\r\n    export default {\r\n        name: \'tree-row\',\r\n        props: {\r\n            node: {\r\n                type: Object,\r\n                required: true\r\n            },\r\n            depth: Number,\r\n            customOptions: Object,\r\n            customStyles: Object,\r\n            parentNode: Object\r\n        },\r\n        data () {\r\n            return {\r\n                styles: {\r\n                    row: {\r\n                        style: {\r\n                            width: \'500px\',\r\n                            cursor: \'pointer\'\r\n                        },\r\n                        child: {\r\n                            class: \'\',\r\n                            style: {\r\n                            },\r\n                            active: {\r\n                                class: \'active\',\r\n                                style: {\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    rowIndent: {\r\n                        paddingLeft: \'20px\'\r\n                    },\r\n                    expanded: {\r\n                        class: \'expanded_icon\'\r\n                    },\r\n                    addNode: {\r\n                        class: \'add_icon\',\r\n                        style: {\r\n                            color: \'#007AD5\'\r\n                        }\r\n                    },\r\n                    deleteNode: {\r\n                        class: \'delete_icon\',\r\n                        style: {\r\n                            color: \'#EE5F5B\'\r\n                        }\r\n                    },\r\n                    selectIcon: {\r\n                        class: \'folder_icon\',\r\n                        style: {\r\n                            color: \'#2ECC71\'\r\n                        },\r\n                        active: {\r\n                            class: \'folder_icon_active\',\r\n                            style: {\r\n                                color: \'#2ECC71\'\r\n                            }\r\n                        }\r\n                    },\r\n                    text: {\r\n                        style: {},\r\n                        class: \'capitalize\',\r\n                        active: {\r\n                            style: {\r\n                                \'font-weight\': \'bold\'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                options: {\r\n                    events: {\r\n                        expanded: {\r\n                            state: true,\r\n                            fn: this.toggleExpanded\r\n                        },\r\n                        selected: {\r\n                            state: true,\r\n                            fn: this.toggleSelected\r\n                        },\r\n                        checked: {\r\n                            state: true,\r\n                            fn: this.toggleChecked\r\n                        },\r\n                        context: {\r\n                            state: true,\r\n                            fn: this.toggleContext\r\n                        }\r\n                    },\r\n                    addNode: { state: false, fn: null, appearOnHover: false },\r\n                    deleteNode: { state: false, fn: null, appearOnHover: false },\r\n                    showTags: false\r\n                },\r\n                checked: false,\r\n                expanded: false,\r\n                selected: false\r\n            }\r\n        },\r\n        watch: {\r\n            checked () {\r\n                this.node.state.checked = this.checked\r\n            },\r\n            expanded () {\r\n                this.node.state.expanded = this.expanded\r\n            },\r\n            selected () {\r\n                this.node.state.selected = this.selected\r\n            }\r\n        },\r\n        mounted () {\r\n            this.copyOptions(this.customOptions, this.options)\r\n            this.copyOptions(this.customStyles, this.styles)\r\n            if (this.node.checkable !== undefined) this.options.events.checked.state = this.node.checkable\r\n            if (this.node.selectable !== undefined) this.options.events.selected.state = this.node.selectable\r\n            if (this.node.expandable !== undefined) this.options.events.expanded.state = this.node.expandable\r\n\r\n            const defaultState = { checked: false, expanded: false, selected: false }\r\n            this.node.state = { ...defaultState, ...this.node.state }\r\n            this.expanded = this.node.state.expanded\r\n            this.selected = this.node.state.selected\r\n            this.checked = this.node.state.checked\r\n        },\r\n        methods: {\r\n            iconStyle (node) {\r\n              return `{ content: ${node.nodeIcon.content}; color: ${node.nodeIcon.color};`\r\n            },\r\n            toggleEvent (eventType, node, event = null) {\r\n                if (this.options.events[eventType].state === true) {\r\n                    const fnName = this.options.events[eventType].fn\r\n                    fnName(node, this, event)\r\n                }\r\n            },\r\n            toggleExpanded (node, instance, event) {\r\n                this.expanded = !this.expanded\r\n                this.node.state.expanded = this.expanded\r\n                this.$nextTick(() => {\r\n                    this.$emit(\'emitNodeExpanded\', node, this.expanded)\r\n                })\r\n            },\r\n            toggleSelected (node, instance, event) {\r\n                this.selected = !this.selected\r\n                this.node.state.selected = this.selected\r\n                this.$emit(\'emitNodeSelected\', node)\r\n            },\r\n            toggleChecked (node, instance, event) {\r\n                this.checked = !this.checked\r\n                this.node.state.checked = this.checked\r\n                this.$nextTick(() => {\r\n                    this.callNodesChecked(this.checked)\r\n                    this.$emit(\'emitNodeChecked\', node)\r\n                })\r\n            },\r\n            toggleContext (node, instance, event) {\r\n                this.$emit(\'emitNodeContext\', node, event)\r\n            },\r\n            emitNodeSelected (nodeSelected) { // redirect the event toward the Tree component\r\n                this.$emit(\'emitNodeSelected\', nodeSelected)\r\n            },\r\n            emitNodeExpanded (node, state) { // redirect the event toward the Tree component\r\n                this.$emit(\'emitNodeExpanded\', node, state)\r\n            },\r\n            emitNodeChecked (nodeChecked) { // redirect the event toward the Tree component\r\n                this.$emit(\'emitNodeChecked\', nodeChecked)\r\n            },\r\n            emitNodeContext (nodeRightClicked, event) { // redirect the event toward the Tree component\r\n                this.$emit(\'emitNodeContext\', nodeRightClicked, event)\r\n            },\r\n            recCallNodes (state, event, nodes) {\r\n                const _this = this\r\n                nodes.forEach((node) => {\r\n                    if (!node.state) node.state = { checked: false, expanded: false, selected: false }\r\n                    node.state[event] = state\r\n                    if (node.nodes) {\r\n                        _this.recCallNodes(state, event, node.nodes)\r\n                    }\r\n                })\r\n            },\r\n            callNodesChecked (state) {\r\n                this.checked = state\r\n                for (let i = 0; i < this.$children.length; i++) {\r\n                    this.$children[i].callNodesChecked(state)\r\n                }\r\n                if (this.$children.length === 0 && this.node.nodes && this.node.nodes.length > 0) {\r\n                    this.recCallNodes(state, \'checked\', this.node.nodes)\r\n                }\r\n            },\r\n            callNodesDeselect () {\r\n                this.selected = false\r\n                this.node.state.selected = this.selected\r\n                for (let i = 0; i < this.$children.length; i++) {\r\n                    this.$children[i].callNodesDeselect()\r\n                }\r\n                if (this.$children.length === 0 && this.node.nodes && this.node.nodes.length > 0) {\r\n                    this.recCallNodes(false, \'selected\', this.node.nodes)\r\n                }\r\n            },\r\n            callSpecificChild (arrIds, fname, args) {\r\n                for (let i = 0; i < this.$children.length; i++) {\r\n                    let currentNodeId = this.$children[i].$props.node.id\r\n                    if (arrIds.find(x => x == currentNodeId)) {\r\n                        this.$children[i][fname](args)\r\n                        return false\r\n                    }\r\n                }\r\n            },\r\n            callNodeChecked (args) {\r\n                const arrIds = args.arrIds\r\n                const value = args.value\r\n                if (arrIds[arrIds.length - 1] == this.node.id) {\r\n                    this.checked = value\r\n                    this.callNodesChecked(this.checked)\r\n                } else {\r\n                    this.expanded = true\r\n                    this.$nextTick(() => {\r\n                        this.callSpecificChild(arrIds, \'callNodeChecked\', args)\r\n                    })\r\n                }\r\n            },\r\n            callNodeSelected (args) {\r\n                const arrIds = args.arrIds\r\n                const value = args.value\r\n                if (arrIds[arrIds.length - 1] == this.node.id) {\r\n                    this.selected = value\r\n                } else {\r\n                    // this.expanded = true\r\n                    this.$nextTick(() => {\r\n                        this.callSpecificChild(arrIds, \'callNodeSelected\', args)\r\n                    })\r\n                }\r\n            },\r\n            callNodeExpanded (args) {\r\n                const arrIds = args.arrIds\r\n                const value = args.value\r\n                if (value === false && this.expanded === false) return\r\n                if (arrIds[arrIds.length - 1] != this.node.id) {\r\n                    if (value === true) {\r\n                        this.expanded = true\r\n                        this.$nextTick(() => {\r\n                            this.callSpecificChild(arrIds, \'callNodeExpanded\', args)\r\n                        })\r\n                    } else {\r\n                        this.callSpecificChild(arrIds, \'callNodeExpanded\', args)\r\n                    }\r\n                } else {\r\n                    this.expanded = value\r\n                }\r\n            },\r\n            copyOptions (src, dst) {\r\n                for (var key in src) {\r\n                    if (!dst[key]) {\r\n                        dst[key] = src[key]\r\n                    } else if (typeof (src[key]) === \'object\') {\r\n                        this.copyOptions(src[key], dst[key])\r\n                    } else {\r\n                        dst[key] = src[key]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n<\/script>\r\n\r\n<style scoped>\r\n    .small-tree-indent {\r\n        margin: 0 3px;\r\n        display: inline-block;\r\n    }\r\n    .icon-hover {\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        transition: all .2s ease-in-out;\r\n    }\r\n    .row_data:hover .icon-hover{\r\n        visibility: visible;\r\n        opacity: 1;\r\n    }\r\n    .capitalize {\r\n        text-transform: capitalize;\r\n    }\r\n    .badge {\r\n        font-size: 12px;\r\n        font-weight: normal;\r\n    }\r\n    li {\r\n        list-style: none;\r\n    }\r\n    .icon_parent {\r\n        background: transparent;\r\n        width: 20px;\r\n        height: 20px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        text-align: center;\r\n        margin: 0 2px 0 0;\r\n    }\r\n    .icon_parent i {\r\n        font-size: 16px;\r\n        line-height: 10px;\r\n    }\r\n    .expanded_icon {\r\n        transform: rotate(0deg);\r\n        transition: all ease .2s;\r\n        display: inline-block;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 4px 0 4px 8px;\r\n        border-color: transparent transparent transparent #FFF;\r\n    }\r\n    .expanded_icon.expanded {\r\n        transform: rotate(90deg);\r\n    }\r\n    .add_icon:before {\r\n        content: \'\\002b\';\r\n    }\r\n    .delete_icon:before {\r\n        content: \'\\00d7\';\r\n    }\r\n    .circle_icon:before {\r\n        content: \'\\2B24\';\r\n    }\r\n    .tag_icon:before {\r\n        content: \'\\25C0\';\r\n    }\r\n    .bars_icon:before {\r\n        content: \'\\2630\';\r\n    }\r\n    .reference_icon:before {\r\n        content: \'\\1F5D8\';\r\n    }\r\n    .method_icon:before {\r\n        content: \'\\02A0D\';\r\n    }\r\n    .folder_icon:before {\r\n        content: \'\\1F5C0\';\r\n    }\r\n    .folder_icon_active:before {\r\n        content: \'\\1F5C1\';\r\n    }\r\n</style>\r\n',"\n.small-tree-indent[data-v-ff1265b4] {\n    margin: 0 3px;\n    display: inline-block;\n}\n.icon-hover[data-v-ff1265b4] {\n    visibility: hidden;\n    opacity: 0;\n    transition: all .2s ease-in-out;\n}\n.row_data:hover .icon-hover[data-v-ff1265b4]{\n    visibility: visible;\n    opacity: 1;\n}\n.capitalize[data-v-ff1265b4] {\n    text-transform: capitalize;\n}\n.badge[data-v-ff1265b4] {\n    font-size: 12px;\n    font-weight: normal;\n}\nli[data-v-ff1265b4] {\n    list-style: none;\n}\n.icon_parent[data-v-ff1265b4] {\n    background: transparent;\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n    vertical-align: middle;\n    text-align: center;\n    margin: 0 2px 0 0;\n}\n.icon_parent i[data-v-ff1265b4] {\n    font-size: 16px;\n    line-height: 10px;\n}\n.expanded_icon[data-v-ff1265b4] {\n    transform: rotate(0deg);\n    transition: all ease .2s;\n    display: inline-block;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 4px 0 4px 8px;\n    border-color: transparent transparent transparent #FFF;\n}\n.expanded_icon.expanded[data-v-ff1265b4] {\n    transform: rotate(90deg);\n}\n.add_icon[data-v-ff1265b4]:before {\n    content: '\\002b';\n}\n.delete_icon[data-v-ff1265b4]:before {\n    content: '\\00d7';\n}\n.circle_icon[data-v-ff1265b4]:before {\n    content: '\\2B24';\n}\n.tag_icon[data-v-ff1265b4]:before {\n    content: '\\25C0';\n}\n.bars_icon[data-v-ff1265b4]:before {\n    content: '\\2630';\n}\n.reference_icon[data-v-ff1265b4]:before {\n    content: '\\1F5D8';\n}\n.method_icon[data-v-ff1265b4]:before {\n    content: '\\02A0D';\n}\n.folder_icon[data-v-ff1265b4]:before {\n    content: '\\1F5C0';\n}\n.folder_icon_active[data-v-ff1265b4]:before {\n    content: '\\1F5C1';\n}\n"]}]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",s=e[3];if(!s)return n;if(t&&"function"==typeof btoa){var o=(r=s,i=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),"/*# ".concat(a," */")),d=s.sources.map((function(e){return"/*# sourceURL=".concat(s.sourceRoot||"").concat(e," */")}));return[n].concat(d).concat([o]).join("\n")}var r,i,a;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,s){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(s)for(var d=0;d<this.length;d++){var r=this[d][0];null!=r&&(o[r]=!0)}for(var i=0;i<e.length;i++){var a=[].concat(e[i]);s&&o[a[0]]||(n&&(a[2]?a[2]="".concat(n," and ").concat(a[2]):a[2]=n),t.push(a))}},t}},function(e,t,n){"use strict";n.r(t);var s={name:"tree-row",props:{node:{type:Object,required:!0},depth:Number,customOptions:Object,customStyles:Object,parentNode:Object},data(){return{styles:{row:{style:{width:"500px",cursor:"pointer"},child:{class:"",style:{},active:{class:"active",style:{}}}},rowIndent:{paddingLeft:"20px"},expanded:{class:"expanded_icon"},addNode:{class:"add_icon",style:{color:"#007AD5"}},deleteNode:{class:"delete_icon",style:{color:"#EE5F5B"}},selectIcon:{class:"folder_icon",style:{color:"#2ECC71"},active:{class:"folder_icon_active",style:{color:"#2ECC71"}}},text:{style:{},class:"capitalize",active:{style:{"font-weight":"bold"}}}},options:{events:{expanded:{state:!0,fn:this.toggleExpanded},selected:{state:!0,fn:this.toggleSelected},checked:{state:!0,fn:this.toggleChecked},context:{state:!0,fn:this.toggleContext}},addNode:{state:!1,fn:null,appearOnHover:!1},deleteNode:{state:!1,fn:null,appearOnHover:!1},showTags:!1},checked:!1,expanded:!1,selected:!1}},watch:{checked(){this.node.state.checked=this.checked},expanded(){this.node.state.expanded=this.expanded},selected(){this.node.state.selected=this.selected}},mounted(){this.copyOptions(this.customOptions,this.options),this.copyOptions(this.customStyles,this.styles),void 0!==this.node.checkable&&(this.options.events.checked.state=this.node.checkable),void 0!==this.node.selectable&&(this.options.events.selected.state=this.node.selectable),void 0!==this.node.expandable&&(this.options.events.expanded.state=this.node.expandable);this.node.state={checked:!1,expanded:!1,selected:!1,...this.node.state},this.expanded=this.node.state.expanded,this.selected=this.node.state.selected,this.checked=this.node.state.checked},methods:{iconStyle:e=>`{ content: ${e.nodeIcon.content}; color: ${e.nodeIcon.color};`,toggleEvent(e,t,n=null){if(!0===this.options.events[e].state){(0,this.options.events[e].fn)(t,this,n)}},toggleExpanded(e,t,n){this.expanded=!this.expanded,this.node.state.expanded=this.expanded,this.$nextTick(()=>{this.$emit("emitNodeExpanded",e,this.expanded)})},toggleSelected(e,t,n){this.selected=!this.selected,this.node.state.selected=this.selected,this.$emit("emitNodeSelected",e)},toggleChecked(e,t,n){this.checked=!this.checked,this.node.state.checked=this.checked,this.$nextTick(()=>{this.callNodesChecked(this.checked),this.$emit("emitNodeChecked",e)})},toggleContext(e,t,n){this.$emit("emitNodeContext",e,n)},emitNodeSelected(e){this.$emit("emitNodeSelected",e)},emitNodeExpanded(e,t){this.$emit("emitNodeExpanded",e,t)},emitNodeChecked(e){this.$emit("emitNodeChecked",e)},emitNodeContext(e,t){this.$emit("emitNodeContext",e,t)},recCallNodes(e,t,n){const s=this;n.forEach(n=>{n.state||(n.state={checked:!1,expanded:!1,selected:!1}),n.state[t]=e,n.nodes&&s.recCallNodes(e,t,n.nodes)})},callNodesChecked(e){this.checked=e;for(let t=0;t<this.$children.length;t++)this.$children[t].callNodesChecked(e);0===this.$children.length&&this.node.nodes&&this.node.nodes.length>0&&this.recCallNodes(e,"checked",this.node.nodes)},callNodesDeselect(){this.selected=!1,this.node.state.selected=this.selected;for(let e=0;e<this.$children.length;e++)this.$children[e].callNodesDeselect();0===this.$children.length&&this.node.nodes&&this.node.nodes.length>0&&this.recCallNodes(!1,"selected",this.node.nodes)},callSpecificChild(e,t,n){for(let s=0;s<this.$children.length;s++){let o=this.$children[s].$props.node.id;if(e.find(e=>e==o))return this.$children[s][t](n),!1}},callNodeChecked(e){const t=e.arrIds,n=e.value;t[t.length-1]==this.node.id?(this.checked=n,this.callNodesChecked(this.checked)):(this.expanded=!0,this.$nextTick(()=>{this.callSpecificChild(t,"callNodeChecked",e)}))},callNodeSelected(e){const t=e.arrIds,n=e.value;t[t.length-1]==this.node.id?this.selected=n:this.$nextTick(()=>{this.callSpecificChild(t,"callNodeSelected",e)})},callNodeExpanded(e){const t=e.arrIds,n=e.value;!1===n&&!1===this.expanded||(t[t.length-1]!=this.node.id?!0===n?(this.expanded=!0,this.$nextTick(()=>{this.callSpecificChild(t,"callNodeExpanded",e)})):this.callSpecificChild(t,"callNodeExpanded",e):this.expanded=n)},copyOptions(e,t){for(var n in e)t[n]&&"object"==typeof e[n]?this.copyOptions(e[n],t[n]):t[n]=e[n]}}},o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",{staticClass:"node",style:e.styles.row.style,attrs:{"data-id":e.node.id}},[n("div",{class:["row_data",e.selected?e.styles.row.child.active.class:e.styles.row.child.class],style:e.selected?e.styles.row.child.active.style:e.styles.row.child.style,on:{click:function(t){return e.toggleEvent("selected",e.node)},contextmenu:function(t){return t.stopPropagation(),e.toggleEvent("context",e.node,t)}}},[n("span",{on:{click:function(t){t.stopPropagation(),1==e.options.events.expanded.state&&null!=e.node.nodes&&e.node.nodes.length>0&&e.toggleEvent("expanded",e.node)}}},[1==e.options.events.expanded.state&&null!=e.node.nodes&&e.node.nodes.length>0?n("i",{class:[{expanded:1==e.expanded},e.styles.expanded.class]}):1==e.options.events.expanded.state&&null==e.node.nodes?n("span",{staticClass:"small-tree-indent"}):e._e()]),e._v(" "),1==e.options.events.selected.state?n("i",{class:e.node.nodeIcon.class,style:{color:e.node.nodeIcon.color},on:{click:function(t){return t.stopPropagation(),e.toggleEvent("selected",e.node)}}}):e._e(),e._v(" "),1==e.options.events.checked.state?n("input",{attrs:{type:"checkbox",name:"item[]","data-id":e.node.id},domProps:{checked:e.checked},on:{click:function(t){return t.stopPropagation(),e.toggleEvent("checked",e.node)}}}):e._e(),e._v(" "),n("span",{class:[{selected:e.selected},e.styles.text.class],style:e.selected?e.styles.text.active.style:e.styles.text.style,attrs:{"data-toggle":"tooltip","data-placement":"top",title:e.node.definition},on:{click:function(t){return t.stopPropagation(),e.toggleEvent("selected",e.node)}}},[e._v("\n                "+e._s(e.node.text)+"\n        ")]),e._v(" "),1==e.options.addNode.state?n("span",{staticClass:"icon_parent",on:{click:function(t){return t.stopPropagation(),e.options.addNode.fn(e.node)}}},[n("i",{class:[{"icon-hover":e.options.addNode.appearOnHover},e.styles.addNode.class],style:e.styles.addNode.style})]):e._e(),e._v(" "),1==e.options.deleteNode.state?n("span",{staticClass:"icon_parent",on:{click:function(t){return t.stopPropagation(),e.options.deleteNode.fn(e.node)}}},[n("i",{class:[{"icon-hover":e.options.deleteNode.appearOnHover},e.styles.deleteNode.class],style:e.styles.deleteNode.style})]):e._e(),e._v(" "),1==e.options.showTags&&e.node.tags?n("span",[null!=e.node.tags[0]&&null!=e.node.tags[0]&&e.node.tags[0]?n("span",{staticClass:"badge"},[e._v("\n      "+e._s(e.node.tags[0])+"\n    ")]):e._e()]):e._e()]),e._v(" "),e.expanded?n("ul",{style:e.styles.rowIndent},e._l(e.node.nodes,(function(t){return n("tree-row",{key:t.id,ref:"tree-row-"+t.id,refInFor:!0,attrs:{"custom-options":e.customOptions,"custom-styles":e.customStyles,depth:e.depth+1,node:t,"parent-node":e.node},on:{emitNodeChecked:e.emitNodeChecked,emitNodeContext:e.emitNodeContext,emitNodeExpanded:e.emitNodeExpanded,emitNodeSelected:e.emitNodeSelected}})})),1):e._e()])};function d(e,t,n,s,o,d,r,i){var a=typeof(e=e||{}).default;"object"!==a&&"function"!==a||(e=e.default);var c,l="function"==typeof e?e.options:e;if(t&&(l.render=t,l.staticRenderFns=n,l._compiled=!0),s&&(l.functional=!0),d&&(l._scopeId=d),r?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},l._ssrRegister=c):o&&(c=i?function(){o.call(this,this.$root.$options.shadowRoot)}:o),c)if(l.functional){l._injectStyles=c;var h=l.render;l.render=function(e,t){return c.call(t),h(e,t)}}else{var p=l.beforeCreate;l.beforeCreate=p?[].concat(p,c):[c]}return{exports:e,options:l}}o._withStripped=!0;var r=d(s,o,[],!1,(function(e){n(0)}),"data-v-ff1265b4",null);r.options.__file="src\\TreeRow.vue";var i=r.exports,a={name:"tree",props:{customOptions:{default:()=>({}),type:Object},customStyles:{default:()=>({}),type:Object},id:{default:"tree",type:String},nodes:{type:Array,required:!0}},data:()=>({styles:{tree:{height:"auto",maxHeight:"500px",overflowY:"scroll",display:"inline-block"}},options:{treeEvents:{expanded:{state:!1,fn:null},collapsed:{state:!1,fn:null},selected:{state:!1,fn:null},checked:{state:!1,fn:null}}},selectedNode:null,force:!0}),components:{"tree-row":i},mounted(){this.copyOptions(this.customOptions,this.options),this.copyOptions(this.customStyles,this.styles)},methods:{forceRender(e){const t=this;this.nodes=[],this.$nextTick(()=>{t.nodes=e})},copyOptions(e,t){for(var n in e)t[n]&&"object"==typeof e[n]?this.copyOptions(e[n],t[n]):t[n]=e[n]},recFindNodePath(e,t,n,s){const o=this;let d=[];return t.forEach(t=>{let r=[];return e==t.id&&s>=n?(d.unshift(t.id),!1):t.nodes&&s>n&&null!=(r=o.recFindNodePath(e,t.nodes,n+1,s))&&r.length>0?(r.unshift(t.id),d=r,!1):void 0}),d},findNodePath(e,t=9999){return this.recFindNodePath(e,this.nodes,1,t)},recFindNode(e,t,n,s){const o=this;let d=null;return t.forEach(t=>{let r=[];return e==t.id&&s>=n?(d=t,!1):t.nodes&&s>n&&null!=(r=o.recFindNode(e,t.nodes,n+1,s))?(d=r,!1):void 0}),d},findNode(e,t=9999){return this.recFindNode(e,this.nodes,1,t)},onNodeSelected(e){const t=this;if(null==this.selectedNode&&!0===e.state.selected)this.selectedNode=e;else if(null!=this.selectedNode&&!1===e.state.selected)this.selectedNode=null;else if(null!=this.selectedNode&&!0===e.state.selected){const n=this.findNodePath(this.selectedNode.id,this.selectedNode.depth);this.callSpecificChild(n,"callNodeSelected",{value:!1,arrIds:n}),this.selectedNode=e,this.$nextTick(()=>{if(t.selectedNode){const e=t.findNodePath(t.selectedNode.id,t.selectedNode.depth);t.callSpecificChild(e,"callNodeSelected",{value:!0,arrIds:e})}})}let n=null;this.options.treeEvents.selected&&!0===this.options.treeEvents.selected.state&&(n=this.customOptions.treeEvents.selected.fn);const s=null!==this.selectedNode;n&&n(e,s)},onNodeExpanded(e,t){let n=null;!0===t&&this.options.treeEvents.expanded&&!0===this.options.treeEvents.expanded.state?n=this.customOptions.treeEvents.expanded.fn:this.options.treeEvents.collapsed&&!0===this.options.treeEvents.collapsed.state&&(n=this.customOptions.treeEvents.collapsed.fn),n&&n(e.id,t)},onNodeChecked(e){let t=null;this.options.treeEvents.checked&&!0===this.options.treeEvents.checked.state&&(t=this.customOptions.treeEvents.checked.fn);const n=e.state.checked;t&&t(e.id,n)},onNodeContext(e,t){let n=null;this.options.treeEvents.context&&!0===this.options.treeEvents.context.state&&(n=this.customOptions.treeEvents.context.fn),n&&n(e,t)},callSpecificChild(e,t,n){for(let s of e){const e=this.$refs["tree-row-"+s];e&&e[0][t](n)}},doCheckNode(e,t,n){const s=this.findNodePath(e,t);s&&this.callSpecificChild(s,"callNodeChecked",{value:n,arrIds:s})},checkNode(e,t){this.doCheckNode(e,t,!0)},uncheckNode(e,t){this.doCheckNode(e,t,!1)},getSelectedNode(){return this.selectedNode},getCheckedNodes(e,t=!1){return this.getNodesData(e,{checked:!0},t)},getExpandedNodes(e,t=!1){return this.getNodesData(e,{expanded:!0},t)},checkAllNodes(){this.callSpecificChild(this.nodes.map(e=>e.id),"callNodesChecked",!0)},uncheckAllNodes(){this.callSpecificChild(this.nodes.map(e=>e.id),"callNodesChecked",!1)},recExpandAllNodes(e){let t=!1;for(let n of e)n.nodes&&(t=!0,!1===this.recExpandAllNodes(n.nodes)&&this.expandNode(n.id));return t},expandAllNodes(){this.recExpandAllNodes(this.nodes)},recCollapseAllNodes(e){for(let t of e)this.findNode(t).state.expanded=!1},collapseAllNodes(){this.recCollapseAllNodes(this.getExpandedNodes("id"));for(let e of this.nodes)this.collapseNode(e.id)},deselectAllNodes(){this.selectedNode=null,this.callSpecificChild(this.nodes.map(e=>e.id),"callNodesDeselect")},expandNode(e,t){const n=this.findNodePath(e,t);this.callSpecificChild(n,"callNodeExpanded",{value:!0,arrIds:n})},selectNode(e,t){const n=this.findNode(e,t),s=this;if(this.selectedNode){let e=this.findNodePath(this.selectedNode.id,this.selectedNode.depth);this.callSpecificChild(e,"callNodeSelected",{value:!1,arrIds:e})}this.selectedNode=n,this.selectedNode&&this.$nextTick(()=>{const e=s.findNodePath(s.selectedNode.id,s.selectedNode.depth);s.callSpecificChild(e,"callNodeSelected",{value:!0,arrIds:e})})},collapseNode(e,t){const n=this.findNodePath(e,t);this.callSpecificChild(n,"callNodeExpanded",{value:!1,arrIds:n})},recGetVisibleNodes(e,t,n){t.node&&e.push(n?t.node:t.node.id);for(let s of Object.values(t.$refs))s&&s[0]&&this.recGetVisibleNodes(e,s[0],n)},getVisibleNodes(e=!1){let t=[];return this.recGetVisibleNodes(t,this,e),t},recGetNodesData(e,t,n){const s=this;let o=[];return void 0===n||n.forEach(n=>{n.state&&Object.keys(n.state).filter(e=>t[e]===n.state[e]).length===Object.keys(t).length&&(Array.isArray(e)?o.push(Object.keys(n).filter(t=>e.includes(t)).reduce((e,t)=>(e[t]=n[t],e),{})):o.push(n[e])),o=o.concat(s.recGetNodesData(e,t,n.nodes))}),o},recGetNodesDataWithFormat(e,t,n){const s=this;let o={};return void 0===n||0===n.length||n.forEach(n=>{n.state&&Object.keys(n.state).filter(e=>t[e]===n.state[e]).length===Object.keys(t).length?o[n.id]=s.recGetNodesDataWithFormat(e,t,n.nodes):Object.assign(o,s.recGetNodesDataWithFormat(e,t,n.nodes))}),o},getNodesData(e,t={},n=!1){let s=null;return s=!1===n?this.recGetNodesData(e,t,this.nodes):this.recGetNodesDataWithFormat(e,t,this.nodes),s}}},c=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:e.id}},[e.force?n("ul",{style:e.styles.tree},e._l(e.nodes,(function(t){return n("tree-row",{key:t.id,ref:"tree-row-"+t.id,refInFor:!0,attrs:{"custom-options":e.customOptions,"custom-styles":e.customStyles,depth:1,node:t,"parent-node":t},on:{emitNodeContext:e.onNodeContext,emitNodeChecked:e.onNodeChecked,emitNodeExpanded:e.onNodeExpanded,emitNodeSelected:e.onNodeSelected}})})),1):e._e()])};c._withStripped=!0;var l=d(a,c,[],!1,null,null,null);l.options.__file="src\\Tree.vue";t.default=l.exports},function(e,t,n){"use strict";function s(e,t){for(var n=[],s={},o=0;o<t.length;o++){var d=t[o],r=d[0],i={id:e+":"+o,css:d[1],media:d[2],sourceMap:d[3]};s[r]?s[r].parts.push(i):n.push(s[r]={id:r,parts:[i]})}return n}n.r(t),n.d(t,"default",(function(){return f}));var o="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!o)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var d={},r=o&&(document.head||document.getElementsByTagName("head")[0]),i=null,a=0,c=!1,l=function(){},h=null,p="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function f(e,t,n,o){c=n,h=o||{};var r=s(e,t);return u(r),function(t){for(var n=[],o=0;o<r.length;o++){var i=r[o];(a=d[i.id]).refs--,n.push(a)}t?u(r=s(e,t)):r=[];for(o=0;o<n.length;o++){var a;if(0===(a=n[o]).refs){for(var c=0;c<a.parts.length;c++)a.parts[c]();delete d[a.id]}}}}function u(e){for(var t=0;t<e.length;t++){var n=e[t],s=d[n.id];if(s){s.refs++;for(var o=0;o<s.parts.length;o++)s.parts[o](n.parts[o]);for(;o<n.parts.length;o++)s.parts.push(A(n.parts[o]));s.parts.length>n.parts.length&&(s.parts.length=n.parts.length)}else{var r=[];for(o=0;o<n.parts.length;o++)r.push(A(n.parts[o]));d[n.id]={id:n.id,refs:1,parts:r}}}}function v(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function A(e){var t,n,s=document.querySelector('style[data-vue-ssr-id~="'+e.id+'"]');if(s){if(c)return l;s.parentNode.removeChild(s)}if(p){var o=a++;s=i||(i=v()),t=m.bind(null,s,o,!1),n=m.bind(null,s,o,!0)}else s=v(),t=N.bind(null,s),n=function(){s.parentNode.removeChild(s)};return t(e),function(s){if(s){if(s.css===e.css&&s.media===e.media&&s.sourceMap===e.sourceMap)return;t(e=s)}else n()}}var g,x=(g=[],function(e,t){return g[e]=t,g.filter(Boolean).join("\n")});function m(e,t,n,s){var o=n?"":s.css;if(e.styleSheet)e.styleSheet.cssText=x(t,o);else{var d=document.createTextNode(o),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(d,r[t]):e.appendChild(d)}}function N(e,t){var n=t.css,s=t.media,o=t.sourceMap;if(s&&e.setAttribute("media",s),h.ssrId&&e.setAttribute("data-vue-ssr-id",t.id),o&&(n+="\n/*# sourceURL="+o.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}]).default}));
//# sourceMappingURL=fast-tree.js.map