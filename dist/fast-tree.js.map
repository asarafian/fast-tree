{"version":3,"sources":["webpack://FastTree/webpack/universalModuleDefinition","webpack://FastTree/webpack/bootstrap","webpack://FastTree/./src/TreeRow.vue?038c","webpack://FastTree/./src/TreeRow.vue?ddbb","webpack://FastTree/./node_modules/css-loader/dist/runtime/api.js","webpack://FastTree/src/TreeRow.vue","webpack://FastTree/./src/TreeRow.vue?fc02","webpack://FastTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js","webpack://FastTree/./src/TreeRow.vue","webpack://FastTree/src/Tree.vue","webpack://FastTree/./src/Tree.vue?c929","webpack://FastTree/./src/Tree.vue","webpack://FastTree/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://FastTree/./node_modules/vue-style-loader/lib/addStylesClient.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","default","locals","add","___CSS_LOADER_API_IMPORT___","push","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","props","node","type","required","depth","customOptions","customStyles","parentNode","styles","row","style","width","cursor","child","class","active","rowIndent","paddingLeft","expanded","addNode","color","deleteNode","selectIcon","text","options","events","state","fn","selected","checked","context","appearOnHover","showTags","watch","mounted","methods","iconStyle","toggleEvent","fnName","toggleExpanded","toggleSelected","toggleChecked","toggleContext","emitNodeSelected","emitNodeExpanded","emitNodeChecked","emitNodeContext","recCallNodes","nodes","_this","callNodesChecked","callNodesDeselect","callSpecificChild","callNodeChecked","callNodeSelected","callNodeExpanded","copyOptions","dst","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","click","$event","contextmenu","stopPropagation","undefined","_e","_v","nodeIcon","domProps","title","definition","_s","tags","_l","ref","refInFor","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","_withStripped","Component","__file","tree","height","maxHeight","overflowY","display","treeEvents","collapsed","selectedNode","force","components","forceRender","recFindNodePath","ret","tmp","findNodePath","recFindNode","findNode","onNodeSelected","arrIds","onNodeExpanded","onNodeChecked","onNodeContext","childs","doCheckNode","checkNode","uncheckNode","getSelectedNode","getCheckedNodes","getExpandedNodes","checkAllNodes","uncheckAllNodes","recExpandAllNodes","hasChild","expandAllNodes","recCollapseAllNodes","collapseAllNodes","deselectAllNodes","expandNode","selectNode","collapseNode","recGetVisibleNodes","arr","getVisibleNodes","recGetNodesData","obj","recGetNodesDataWithFormat","getNodesData","listToStyles","parentId","newStyles","part","css","media","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","update","remove","querySelector","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild"],"mappings":"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","file":"fast-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FastTree\"] = factory();\n\telse\n\t\troot[\"FastTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js?sourceMap!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ff1265b4\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TreeRow.vue\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"54f20205\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js?sourceMap!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ff1265b4\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TreeRow.vue\", function() {\n     var newContent = require(\"!!../node_modules/css-loader/dist/cjs.js?sourceMap!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ff1265b4\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./TreeRow.vue\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"\\n.small-tree-indent[data-v-ff1265b4] {\\n    margin: 0 3px;\\n    display: inline-block;\\n}\\n.icon-hover[data-v-ff1265b4] {\\n    visibility: hidden;\\n    opacity: 0;\\n    transition: all .2s ease-in-out;\\n}\\n.row_data:hover .icon-hover[data-v-ff1265b4]{\\n    visibility: visible;\\n    opacity: 1;\\n}\\n.capitalize[data-v-ff1265b4] {\\n    text-transform: capitalize;\\n}\\n.badge[data-v-ff1265b4] {\\n    font-size: 12px;\\n    font-weight: normal;\\n}\\nli[data-v-ff1265b4] {\\n    list-style: none;\\n}\\n.icon_parent[data-v-ff1265b4] {\\n    background: transparent;\\n    width: 20px;\\n    height: 20px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    text-align: center;\\n    margin: 0 2px 0 0;\\n}\\n.icon_parent i[data-v-ff1265b4] {\\n    font-size: 16px;\\n    line-height: 10px;\\n}\\n.expanded_icon[data-v-ff1265b4] {\\n    transform: rotate(0deg);\\n    transition: all ease .2s;\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-style: solid;\\n    border-width: 4px 0 4px 8px;\\n    border-color: transparent transparent transparent #FFF;\\n}\\n.expanded_icon.expanded[data-v-ff1265b4] {\\n    transform: rotate(90deg);\\n}\\n.add_icon[data-v-ff1265b4]:before {\\n    content: '\\\\002b';\\n}\\n.delete_icon[data-v-ff1265b4]:before {\\n    content: '\\\\00d7';\\n}\\n.circle_icon[data-v-ff1265b4]:before {\\n    content: '\\\\2B24';\\n}\\n.tag_icon[data-v-ff1265b4]:before {\\n    content: '\\\\25C0';\\n}\\n.bars_icon[data-v-ff1265b4]:before {\\n    content: '\\\\2630';\\n}\\n.reference_icon[data-v-ff1265b4]:before {\\n    content: '\\\\1F5D8';\\n}\\n.method_icon[data-v-ff1265b4]:before {\\n    content: '\\\\02A0D';\\n}\\n.folder_icon[data-v-ff1265b4]:before {\\n    content: '\\\\1F5C0';\\n}\\n.folder_icon_active[data-v-ff1265b4]:before {\\n    content: '\\\\1F5C1';\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"src/TreeRow.vue\",\"TreeRow.vue\"],\"names\":[],\"mappings\":\";AAmWA;IACA,aAAA;IACA,qBAAA;ACjWA;ADmWA;IACA,kBAAA;IACA,UAAA;IACA,+BAAA;ACjWA;ADmWA;IACA,mBAAA;IACA,UAAA;ACjWA;ADmWA;IACA,0BAAA;ACjWA;ADmWA;IACA,eAAA;IACA,mBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,uBAAA;IACA,WAAA;IACA,YAAA;IACA,qBAAA;IACA,sBAAA;IACA,kBAAA;IACA,iBAAA;ACjWA;ADmWA;IACA,eAAA;IACA,iBAAA;ACjWA;ADmWA;IACA,uBAAA;IACA,wBAAA;IACA,qBAAA;IACA,QAAA;IACA,SAAA;IACA,mBAAA;IACA,2BAAA;IACA,sDAAA;ACjWA;ADmWA;IACA,wBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,gBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA;ADmWA;IACA,iBAAA;ACjWA\",\"file\":\"TreeRow.vue\",\"sourcesContent\":[\"<template>\\r\\n    <li\\r\\n            class=\\\"node\\\"\\r\\n            :data-id=\\\"node.id\\\"\\r\\n            :style=\\\"styles.row.style\\\">\\r\\n        <div\\r\\n                :class=\\\"['row_data', selected ? styles.row.child.active.class: styles.row.child.class]\\\"\\r\\n                :style=\\\"selected ? styles.row.child.active.style : styles.row.child.style\\\"\\r\\n                @click=\\\"toggleEvent('selected', node)\\\"\\r\\n                @contextmenu.stop=\\\"toggleEvent('context', node, $event)\\\">\\r\\n      <span @click.stop=\\\"options.events.expanded.state == true && node.nodes != undefined && node.nodes.length > 0 && toggleEvent('expanded', node)\\\">\\r\\n        <i\\r\\n                v-if=\\\"options.events.expanded.state == true && node.nodes != undefined && node.nodes.length > 0\\\"\\r\\n                :class=\\\"[{'expanded': expanded == true}, styles.expanded.class]\\\">\\r\\n        </i>\\r\\n        <span\\r\\n                v-else-if=\\\"options.events.expanded.state == true && node.nodes == undefined\\\"\\r\\n                class=\\\"small-tree-indent\\\">\\r\\n        </span>\\r\\n      </span>\\r\\n            <i\\r\\n                    v-if=\\\"options.events.selected.state == true\\\"\\r\\n                    @click.stop=\\\"toggleEvent('selected', node)\\\"\\r\\n                    :class=\\\"node.nodeIcon.class\\\"\\r\\n                    :style=\\\"{ color: node.nodeIcon.color }\\\"\\r\\n            >\\r\\n            </i>\\r\\n            <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    name=\\\"item[]\\\"\\r\\n                    :data-id=\\\"node.id\\\"\\r\\n                    :checked=\\\"checked\\\"\\r\\n                    v-if=\\\"options.events.checked.state == true\\\"\\r\\n                    @click.stop=\\\"toggleEvent('checked', node)\\\"\\r\\n            >\\r\\n            <span\\r\\n                    data-toggle=\\\"tooltip\\\"\\r\\n                    data-placement=\\\"top\\\"\\r\\n                    :title=\\\"node.definition\\\"\\r\\n                    v-bind:class=\\\"[{'selected': selected}, styles.text.class]\\\"\\r\\n                    :style=\\\"selected ? styles.text.active.style : styles.text.style\\\"\\r\\n                    @click.stop=\\\"toggleEvent('selected', node)\\\" >\\r\\n                    {{ node.text }}\\r\\n            </span>\\r\\n            <span\\r\\n                    v-if=\\\"options.addNode.state == true\\\"\\r\\n                    @click.stop=\\\"options.addNode.fn(node)\\\"\\r\\n                    class=\\\"icon_parent\\\">\\r\\n        <i\\r\\n                v-bind:class=\\\"[{'icon-hover': options.addNode.appearOnHover}, styles.addNode.class]\\\"\\r\\n                :style=\\\"styles.addNode.style\\\">\\r\\n        </i>\\r\\n      </span>\\r\\n            <span\\r\\n                    v-if=\\\"options.deleteNode.state == true\\\"\\r\\n                    @click.stop=\\\"options.deleteNode.fn(node)\\\"\\r\\n                    class=\\\"icon_parent\\\">\\r\\n        <i\\r\\n                v-bind:class=\\\"[{'icon-hover': options.deleteNode.appearOnHover}, styles.deleteNode.class]\\\"\\r\\n                :style=\\\"styles.deleteNode.style\\\">\\r\\n        </i>\\r\\n      </span>\\r\\n            <span v-if=\\\"options.showTags == true && node.tags\\\">\\r\\n        <span\\r\\n                v-if=\\\"node.tags[0] != undefined && node.tags[0]!= null && node.tags[0]\\\"\\r\\n                class=\\\"badge\\\">\\r\\n          {{ node.tags[0] }}\\r\\n        </span>\\r\\n      </span>\\r\\n        </div>\\r\\n        <ul v-if=\\\"expanded\\\" :style=\\\"styles.rowIndent\\\">\\r\\n            <tree-row\\r\\n                    v-for=\\\"child in node.nodes\\\"\\r\\n                    :ref=\\\"'tree-row-' + child.id\\\"\\r\\n                    :custom-options=\\\"customOptions\\\"\\r\\n                    :custom-styles=\\\"customStyles\\\"\\r\\n                    :depth=\\\"depth + 1\\\"\\r\\n                    :key=\\\"child.id\\\"\\r\\n                    :node=\\\"child\\\"\\r\\n                    :parent-node=\\\"node\\\"\\r\\n                    v-on:emitNodeChecked=\\\"emitNodeChecked\\\"\\r\\n                    v-on:emitNodeContext=\\\"emitNodeContext\\\"\\r\\n                    v-on:emitNodeExpanded=\\\"emitNodeExpanded\\\"\\r\\n                    v-on:emitNodeSelected=\\\"emitNodeSelected\\\">\\r\\n            </tree-row>\\r\\n        </ul>\\r\\n    </li>\\r\\n</template>\\r\\n\\r\\n<script type=\\\"text/javascript\\\">\\r\\n    export default {\\r\\n        name: 'tree-row',\\r\\n        props: {\\r\\n            node: {\\r\\n                type: Object,\\r\\n                required: true\\r\\n            },\\r\\n            depth: Number,\\r\\n            customOptions: Object,\\r\\n            customStyles: Object,\\r\\n            parentNode: Object\\r\\n        },\\r\\n        data () {\\r\\n            return {\\r\\n                styles: {\\r\\n                    row: {\\r\\n                        style: {\\r\\n                            width: '500px',\\r\\n                            cursor: 'pointer'\\r\\n                        },\\r\\n                        child: {\\r\\n                            class: '',\\r\\n                            style: {\\r\\n                            },\\r\\n                            active: {\\r\\n                                class: 'active',\\r\\n                                style: {\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    },\\r\\n                    rowIndent: {\\r\\n                        paddingLeft: '20px'\\r\\n                    },\\r\\n                    expanded: {\\r\\n                        class: 'expanded_icon'\\r\\n                    },\\r\\n                    addNode: {\\r\\n                        class: 'add_icon',\\r\\n                        style: {\\r\\n                            color: '#007AD5'\\r\\n                        }\\r\\n                    },\\r\\n                    deleteNode: {\\r\\n                        class: 'delete_icon',\\r\\n                        style: {\\r\\n                            color: '#EE5F5B'\\r\\n                        }\\r\\n                    },\\r\\n                    selectIcon: {\\r\\n                        class: 'folder_icon',\\r\\n                        style: {\\r\\n                            color: '#2ECC71'\\r\\n                        },\\r\\n                        active: {\\r\\n                            class: 'folder_icon_active',\\r\\n                            style: {\\r\\n                                color: '#2ECC71'\\r\\n                            }\\r\\n                        }\\r\\n                    },\\r\\n                    text: {\\r\\n                        style: {},\\r\\n                        class: 'capitalize',\\r\\n                        active: {\\r\\n                            style: {\\r\\n                                'font-weight': 'bold'\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                },\\r\\n                options: {\\r\\n                    events: {\\r\\n                        expanded: {\\r\\n                            state: true,\\r\\n                            fn: this.toggleExpanded\\r\\n                        },\\r\\n                        selected: {\\r\\n                            state: true,\\r\\n                            fn: this.toggleSelected\\r\\n                        },\\r\\n                        checked: {\\r\\n                            state: true,\\r\\n                            fn: this.toggleChecked\\r\\n                        },\\r\\n                        context: {\\r\\n                            state: true,\\r\\n                            fn: this.toggleContext\\r\\n                        }\\r\\n                    },\\r\\n                    addNode: { state: false, fn: null, appearOnHover: false },\\r\\n                    deleteNode: { state: false, fn: null, appearOnHover: false },\\r\\n                    showTags: false\\r\\n                },\\r\\n                checked: false,\\r\\n                expanded: false,\\r\\n                selected: false\\r\\n            }\\r\\n        },\\r\\n        watch: {\\r\\n            checked () {\\r\\n                this.node.state.checked = this.checked\\r\\n            },\\r\\n            expanded () {\\r\\n                this.node.state.expanded = this.expanded\\r\\n            },\\r\\n            selected () {\\r\\n                this.node.state.selected = this.selected\\r\\n            }\\r\\n        },\\r\\n        mounted () {\\r\\n            this.copyOptions(this.customOptions, this.options)\\r\\n            this.copyOptions(this.customStyles, this.styles)\\r\\n            if (this.node.checkable !== undefined) this.options.events.checked.state = this.node.checkable\\r\\n            if (this.node.selectable !== undefined) this.options.events.selected.state = this.node.selectable\\r\\n            if (this.node.expandable !== undefined) this.options.events.expanded.state = this.node.expandable\\r\\n\\r\\n            const defaultState = { checked: false, expanded: false, selected: false }\\r\\n            this.node.state = { ...defaultState, ...this.node.state }\\r\\n            this.expanded = this.node.state.expanded\\r\\n            this.selected = this.node.state.selected\\r\\n            this.checked = this.node.state.checked\\r\\n        },\\r\\n        methods: {\\r\\n            iconStyle (node) {\\r\\n              return `{ content: ${node.nodeIcon.content}; color: ${node.nodeIcon.color};`\\r\\n            },\\r\\n            toggleEvent (eventType, node, event = null) {\\r\\n                if (this.options.events[eventType].state === true) {\\r\\n                    const fnName = this.options.events[eventType].fn\\r\\n                    fnName(node, this, event)\\r\\n                }\\r\\n            },\\r\\n            toggleExpanded (node, instance, event) {\\r\\n                this.expanded = !this.expanded\\r\\n                this.node.state.expanded = this.expanded\\r\\n                this.$nextTick(() => {\\r\\n                    this.$emit('emitNodeExpanded', node, this.expanded)\\r\\n                })\\r\\n            },\\r\\n            toggleSelected (node, instance, event) {\\r\\n                this.selected = !this.selected\\r\\n                this.node.state.selected = this.selected\\r\\n                this.$emit('emitNodeSelected', node)\\r\\n            },\\r\\n            toggleChecked (node, instance, event) {\\r\\n                this.checked = !this.checked\\r\\n                this.node.state.checked = this.checked\\r\\n                this.$nextTick(() => {\\r\\n                    this.callNodesChecked(this.checked)\\r\\n                    this.$emit('emitNodeChecked', node)\\r\\n                })\\r\\n            },\\r\\n            toggleContext (node, instance, event) {\\r\\n                this.$emit('emitNodeContext', node, event)\\r\\n            },\\r\\n            emitNodeSelected (nodeSelected) { // redirect the event toward the Tree component\\r\\n                this.$emit('emitNodeSelected', nodeSelected)\\r\\n            },\\r\\n            emitNodeExpanded (node, state) { // redirect the event toward the Tree component\\r\\n                this.$emit('emitNodeExpanded', node, state)\\r\\n            },\\r\\n            emitNodeChecked (nodeChecked) { // redirect the event toward the Tree component\\r\\n                this.$emit('emitNodeChecked', nodeChecked)\\r\\n            },\\r\\n            emitNodeContext (nodeRightClicked, event) { // redirect the event toward the Tree component\\r\\n                this.$emit('emitNodeContext', nodeRightClicked, event)\\r\\n            },\\r\\n            recCallNodes (state, event, nodes) {\\r\\n                const _this = this\\r\\n                nodes.forEach((node) => {\\r\\n                    if (!node.state) node.state = { checked: false, expanded: false, selected: false }\\r\\n                    node.state[event] = state\\r\\n                    if (node.nodes) {\\r\\n                        _this.recCallNodes(state, event, node.nodes)\\r\\n                    }\\r\\n                })\\r\\n            },\\r\\n            callNodesChecked (state) {\\r\\n                this.checked = state\\r\\n                for (let i = 0; i < this.$children.length; i++) {\\r\\n                    this.$children[i].callNodesChecked(state)\\r\\n                }\\r\\n                if (this.$children.length === 0 && this.node.nodes && this.node.nodes.length > 0) {\\r\\n                    this.recCallNodes(state, 'checked', this.node.nodes)\\r\\n                }\\r\\n            },\\r\\n            callNodesDeselect () {\\r\\n                this.selected = false\\r\\n                this.node.state.selected = this.selected\\r\\n                for (let i = 0; i < this.$children.length; i++) {\\r\\n                    this.$children[i].callNodesDeselect()\\r\\n                }\\r\\n                if (this.$children.length === 0 && this.node.nodes && this.node.nodes.length > 0) {\\r\\n                    this.recCallNodes(false, 'selected', this.node.nodes)\\r\\n                }\\r\\n            },\\r\\n            callSpecificChild (arrIds, fname, args) {\\r\\n                for (let i = 0; i < this.$children.length; i++) {\\r\\n                    let currentNodeId = this.$children[i].$props.node.id\\r\\n                    if (arrIds.find(x => x == currentNodeId)) {\\r\\n                        this.$children[i][fname](args)\\r\\n                        return false\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            callNodeChecked (args) {\\r\\n                const arrIds = args.arrIds\\r\\n                const value = args.value\\r\\n                if (arrIds[arrIds.length - 1] == this.node.id) {\\r\\n                    this.checked = value\\r\\n                    this.callNodesChecked(this.checked)\\r\\n                } else {\\r\\n                    this.expanded = true\\r\\n                    this.$nextTick(() => {\\r\\n                        this.callSpecificChild(arrIds, 'callNodeChecked', args)\\r\\n                    })\\r\\n                }\\r\\n            },\\r\\n            callNodeSelected (args) {\\r\\n                const arrIds = args.arrIds\\r\\n                const value = args.value\\r\\n                if (arrIds[arrIds.length - 1] == this.node.id) {\\r\\n                    this.selected = value\\r\\n                } else {\\r\\n                    // this.expanded = true\\r\\n                    this.$nextTick(() => {\\r\\n                        this.callSpecificChild(arrIds, 'callNodeSelected', args)\\r\\n                    })\\r\\n                }\\r\\n            },\\r\\n            callNodeExpanded (args) {\\r\\n                const arrIds = args.arrIds\\r\\n                const value = args.value\\r\\n                if (value === false && this.expanded === false) return\\r\\n                if (arrIds[arrIds.length - 1] != this.node.id) {\\r\\n                    if (value === true) {\\r\\n                        this.expanded = true\\r\\n                        this.$nextTick(() => {\\r\\n                            this.callSpecificChild(arrIds, 'callNodeExpanded', args)\\r\\n                        })\\r\\n                    } else {\\r\\n                        this.callSpecificChild(arrIds, 'callNodeExpanded', args)\\r\\n                    }\\r\\n                } else {\\r\\n                    this.expanded = value\\r\\n                }\\r\\n            },\\r\\n            copyOptions (src, dst) {\\r\\n                for (var key in src) {\\r\\n                    if (!dst[key]) {\\r\\n                        dst[key] = src[key]\\r\\n                    } else if (typeof (src[key]) === 'object') {\\r\\n                        this.copyOptions(src[key], dst[key])\\r\\n                    } else {\\r\\n                        dst[key] = src[key]\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n</script>\\r\\n\\r\\n<style scoped>\\r\\n    .small-tree-indent {\\r\\n        margin: 0 3px;\\r\\n        display: inline-block;\\r\\n    }\\r\\n    .icon-hover {\\r\\n        visibility: hidden;\\r\\n        opacity: 0;\\r\\n        transition: all .2s ease-in-out;\\r\\n    }\\r\\n    .row_data:hover .icon-hover{\\r\\n        visibility: visible;\\r\\n        opacity: 1;\\r\\n    }\\r\\n    .capitalize {\\r\\n        text-transform: capitalize;\\r\\n    }\\r\\n    .badge {\\r\\n        font-size: 12px;\\r\\n        font-weight: normal;\\r\\n    }\\r\\n    li {\\r\\n        list-style: none;\\r\\n    }\\r\\n    .icon_parent {\\r\\n        background: transparent;\\r\\n        width: 20px;\\r\\n        height: 20px;\\r\\n        display: inline-block;\\r\\n        vertical-align: middle;\\r\\n        text-align: center;\\r\\n        margin: 0 2px 0 0;\\r\\n    }\\r\\n    .icon_parent i {\\r\\n        font-size: 16px;\\r\\n        line-height: 10px;\\r\\n    }\\r\\n    .expanded_icon {\\r\\n        transform: rotate(0deg);\\r\\n        transition: all ease .2s;\\r\\n        display: inline-block;\\r\\n        width: 0;\\r\\n        height: 0;\\r\\n        border-style: solid;\\r\\n        border-width: 4px 0 4px 8px;\\r\\n        border-color: transparent transparent transparent #FFF;\\r\\n    }\\r\\n    .expanded_icon.expanded {\\r\\n        transform: rotate(90deg);\\r\\n    }\\r\\n    .add_icon:before {\\r\\n        content: '\\\\002b';\\r\\n    }\\r\\n    .delete_icon:before {\\r\\n        content: '\\\\00d7';\\r\\n    }\\r\\n    .circle_icon:before {\\r\\n        content: '\\\\2B24';\\r\\n    }\\r\\n    .tag_icon:before {\\r\\n        content: '\\\\25C0';\\r\\n    }\\r\\n    .bars_icon:before {\\r\\n        content: '\\\\2630';\\r\\n    }\\r\\n    .reference_icon:before {\\r\\n        content: '\\\\1F5D8';\\r\\n    }\\r\\n    .method_icon:before {\\r\\n        content: '\\\\02A0D';\\r\\n    }\\r\\n    .folder_icon:before {\\r\\n        content: '\\\\1F5C0';\\r\\n    }\\r\\n    .folder_icon_active:before {\\r\\n        content: '\\\\1F5C1';\\r\\n    }\\r\\n</style>\\r\\n\",\"\\n.small-tree-indent[data-v-ff1265b4] {\\n    margin: 0 3px;\\n    display: inline-block;\\n}\\n.icon-hover[data-v-ff1265b4] {\\n    visibility: hidden;\\n    opacity: 0;\\n    transition: all .2s ease-in-out;\\n}\\n.row_data:hover .icon-hover[data-v-ff1265b4]{\\n    visibility: visible;\\n    opacity: 1;\\n}\\n.capitalize[data-v-ff1265b4] {\\n    text-transform: capitalize;\\n}\\n.badge[data-v-ff1265b4] {\\n    font-size: 12px;\\n    font-weight: normal;\\n}\\nli[data-v-ff1265b4] {\\n    list-style: none;\\n}\\n.icon_parent[data-v-ff1265b4] {\\n    background: transparent;\\n    width: 20px;\\n    height: 20px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    text-align: center;\\n    margin: 0 2px 0 0;\\n}\\n.icon_parent i[data-v-ff1265b4] {\\n    font-size: 16px;\\n    line-height: 10px;\\n}\\n.expanded_icon[data-v-ff1265b4] {\\n    transform: rotate(0deg);\\n    transition: all ease .2s;\\n    display: inline-block;\\n    width: 0;\\n    height: 0;\\n    border-style: solid;\\n    border-width: 4px 0 4px 8px;\\n    border-color: transparent transparent transparent #FFF;\\n}\\n.expanded_icon.expanded[data-v-ff1265b4] {\\n    transform: rotate(90deg);\\n}\\n.add_icon[data-v-ff1265b4]:before {\\n    content: '\\\\002b';\\n}\\n.delete_icon[data-v-ff1265b4]:before {\\n    content: '\\\\00d7';\\n}\\n.circle_icon[data-v-ff1265b4]:before {\\n    content: '\\\\2B24';\\n}\\n.tag_icon[data-v-ff1265b4]:before {\\n    content: '\\\\25C0';\\n}\\n.bars_icon[data-v-ff1265b4]:before {\\n    content: '\\\\2630';\\n}\\n.reference_icon[data-v-ff1265b4]:before {\\n    content: '\\\\1F5D8';\\n}\\n.method_icon[data-v-ff1265b4]:before {\\n    content: '\\\\02A0D';\\n}\\n.folder_icon[data-v-ff1265b4]:before {\\n    content: '\\\\1F5C0';\\n}\\n.folder_icon_active[data-v-ff1265b4]:before {\\n    content: '\\\\1F5C1';\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","<template>\r\n    <li\r\n            class=\"node\"\r\n            :data-id=\"node.id\"\r\n            :style=\"styles.row.style\">\r\n        <div\r\n                :class=\"['row_data', selected ? styles.row.child.active.class: styles.row.child.class]\"\r\n                :style=\"selected ? styles.row.child.active.style : styles.row.child.style\"\r\n                @click=\"toggleEvent('selected', node)\"\r\n                @contextmenu.stop=\"toggleEvent('context', node, $event)\">\r\n      <span @click.stop=\"options.events.expanded.state == true && node.nodes != undefined && node.nodes.length > 0 && toggleEvent('expanded', node)\">\r\n        <i\r\n                v-if=\"options.events.expanded.state == true && node.nodes != undefined && node.nodes.length > 0\"\r\n                :class=\"[{'expanded': expanded == true}, styles.expanded.class]\">\r\n        </i>\r\n        <span\r\n                v-else-if=\"options.events.expanded.state == true && node.nodes == undefined\"\r\n                class=\"small-tree-indent\">\r\n        </span>\r\n      </span>\r\n            <i\r\n                    v-if=\"options.events.selected.state == true\"\r\n                    @click.stop=\"toggleEvent('selected', node)\"\r\n                    :class=\"node.nodeIcon.class\"\r\n                    :style=\"{ color: node.nodeIcon.color }\"\r\n            >\r\n            </i>\r\n            <input\r\n                    type=\"checkbox\"\r\n                    name=\"item[]\"\r\n                    :data-id=\"node.id\"\r\n                    :checked=\"checked\"\r\n                    v-if=\"options.events.checked.state == true\"\r\n                    @click.stop=\"toggleEvent('checked', node)\"\r\n            >\r\n            <span\r\n                    data-toggle=\"tooltip\"\r\n                    data-placement=\"top\"\r\n                    :title=\"node.definition\"\r\n                    v-bind:class=\"[{'selected': selected}, styles.text.class]\"\r\n                    :style=\"selected ? styles.text.active.style : styles.text.style\"\r\n                    @click.stop=\"toggleEvent('selected', node)\" >\r\n                    {{ node.text }}\r\n            </span>\r\n            <span\r\n                    v-if=\"options.addNode.state == true\"\r\n                    @click.stop=\"options.addNode.fn(node)\"\r\n                    class=\"icon_parent\">\r\n        <i\r\n                v-bind:class=\"[{'icon-hover': options.addNode.appearOnHover}, styles.addNode.class]\"\r\n                :style=\"styles.addNode.style\">\r\n        </i>\r\n      </span>\r\n            <span\r\n                    v-if=\"options.deleteNode.state == true\"\r\n                    @click.stop=\"options.deleteNode.fn(node)\"\r\n                    class=\"icon_parent\">\r\n        <i\r\n                v-bind:class=\"[{'icon-hover': options.deleteNode.appearOnHover}, styles.deleteNode.class]\"\r\n                :style=\"styles.deleteNode.style\">\r\n        </i>\r\n      </span>\r\n            <span v-if=\"options.showTags == true && node.tags\">\r\n        <span\r\n                v-if=\"node.tags[0] != undefined && node.tags[0]!= null && node.tags[0]\"\r\n                class=\"badge\">\r\n          {{ node.tags[0] }}\r\n        </span>\r\n      </span>\r\n        </div>\r\n        <ul v-if=\"expanded\" :style=\"styles.rowIndent\">\r\n            <tree-row\r\n                    v-for=\"child in node.nodes\"\r\n                    :ref=\"'tree-row-' + child.id\"\r\n                    :custom-options=\"customOptions\"\r\n                    :custom-styles=\"customStyles\"\r\n                    :depth=\"depth + 1\"\r\n                    :key=\"child.id\"\r\n                    :node=\"child\"\r\n                    :parent-node=\"node\"\r\n                    v-on:emitNodeChecked=\"emitNodeChecked\"\r\n                    v-on:emitNodeContext=\"emitNodeContext\"\r\n                    v-on:emitNodeExpanded=\"emitNodeExpanded\"\r\n                    v-on:emitNodeSelected=\"emitNodeSelected\">\r\n            </tree-row>\r\n        </ul>\r\n    </li>\r\n</template>\r\n\r\n<script type=\"text/javascript\">\r\n    export default {\r\n        name: 'tree-row',\r\n        props: {\r\n            node: {\r\n                type: Object,\r\n                required: true\r\n            },\r\n            depth: Number,\r\n            customOptions: Object,\r\n            customStyles: Object,\r\n            parentNode: Object\r\n        },\r\n        data () {\r\n            return {\r\n                styles: {\r\n                    row: {\r\n                        style: {\r\n                            width: '500px',\r\n                            cursor: 'pointer'\r\n                        },\r\n                        child: {\r\n                            class: '',\r\n                            style: {\r\n                            },\r\n                            active: {\r\n                                class: 'active',\r\n                                style: {\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    rowIndent: {\r\n                        paddingLeft: '20px'\r\n                    },\r\n                    expanded: {\r\n                        class: 'expanded_icon'\r\n                    },\r\n                    addNode: {\r\n                        class: 'add_icon',\r\n                        style: {\r\n                            color: '#007AD5'\r\n                        }\r\n                    },\r\n                    deleteNode: {\r\n                        class: 'delete_icon',\r\n                        style: {\r\n                            color: '#EE5F5B'\r\n                        }\r\n                    },\r\n                    selectIcon: {\r\n                        class: 'folder_icon',\r\n                        style: {\r\n                            color: '#2ECC71'\r\n                        },\r\n                        active: {\r\n                            class: 'folder_icon_active',\r\n                            style: {\r\n                                color: '#2ECC71'\r\n                            }\r\n                        }\r\n                    },\r\n                    text: {\r\n                        style: {},\r\n                        class: 'capitalize',\r\n                        active: {\r\n                            style: {\r\n                                'font-weight': 'bold'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                options: {\r\n                    events: {\r\n                        expanded: {\r\n                            state: true,\r\n                            fn: this.toggleExpanded\r\n                        },\r\n                        selected: {\r\n                            state: true,\r\n                            fn: this.toggleSelected\r\n                        },\r\n                        checked: {\r\n                            state: true,\r\n                            fn: this.toggleChecked\r\n                        },\r\n                        context: {\r\n                            state: true,\r\n                            fn: this.toggleContext\r\n                        }\r\n                    },\r\n                    addNode: { state: false, fn: null, appearOnHover: false },\r\n                    deleteNode: { state: false, fn: null, appearOnHover: false },\r\n                    showTags: false\r\n                },\r\n                checked: false,\r\n                expanded: false,\r\n                selected: false\r\n            }\r\n        },\r\n        watch: {\r\n            checked () {\r\n                this.node.state.checked = this.checked\r\n            },\r\n            expanded () {\r\n                this.node.state.expanded = this.expanded\r\n            },\r\n            selected () {\r\n                this.node.state.selected = this.selected\r\n            }\r\n        },\r\n        mounted () {\r\n            this.copyOptions(this.customOptions, this.options)\r\n            this.copyOptions(this.customStyles, this.styles)\r\n            if (this.node.checkable !== undefined) this.options.events.checked.state = this.node.checkable\r\n            if (this.node.selectable !== undefined) this.options.events.selected.state = this.node.selectable\r\n            if (this.node.expandable !== undefined) this.options.events.expanded.state = this.node.expandable\r\n\r\n            const defaultState = { checked: false, expanded: false, selected: false }\r\n            this.node.state = { ...defaultState, ...this.node.state }\r\n            this.expanded = this.node.state.expanded\r\n            this.selected = this.node.state.selected\r\n            this.checked = this.node.state.checked\r\n        },\r\n        methods: {\r\n            iconStyle (node) {\r\n              return `{ content: ${node.nodeIcon.content}; color: ${node.nodeIcon.color};`\r\n            },\r\n            toggleEvent (eventType, node, event = null) {\r\n                if (this.options.events[eventType].state === true) {\r\n                    const fnName = this.options.events[eventType].fn\r\n                    fnName(node, this, event)\r\n                }\r\n            },\r\n            toggleExpanded (node, instance, event) {\r\n                this.expanded = !this.expanded\r\n                this.node.state.expanded = this.expanded\r\n                this.$nextTick(() => {\r\n                    this.$emit('emitNodeExpanded', node, this.expanded)\r\n                })\r\n            },\r\n            toggleSelected (node, instance, event) {\r\n                this.selected = !this.selected\r\n                this.node.state.selected = this.selected\r\n                this.$emit('emitNodeSelected', node)\r\n            },\r\n            toggleChecked (node, instance, event) {\r\n                this.checked = !this.checked\r\n                this.node.state.checked = this.checked\r\n                this.$nextTick(() => {\r\n                    this.callNodesChecked(this.checked)\r\n                    this.$emit('emitNodeChecked', node)\r\n                })\r\n            },\r\n            toggleContext (node, instance, event) {\r\n                this.$emit('emitNodeContext', node, event)\r\n            },\r\n            emitNodeSelected (nodeSelected) { // redirect the event toward the Tree component\r\n                this.$emit('emitNodeSelected', nodeSelected)\r\n            },\r\n            emitNodeExpanded (node, state) { // redirect the event toward the Tree component\r\n                this.$emit('emitNodeExpanded', node, state)\r\n            },\r\n            emitNodeChecked (nodeChecked) { // redirect the event toward the Tree component\r\n                this.$emit('emitNodeChecked', nodeChecked)\r\n            },\r\n            emitNodeContext (nodeRightClicked, event) { // redirect the event toward the Tree component\r\n                this.$emit('emitNodeContext', nodeRightClicked, event)\r\n            },\r\n            recCallNodes (state, event, nodes) {\r\n                const _this = this\r\n                nodes.forEach((node) => {\r\n                    if (!node.state) node.state = { checked: false, expanded: false, selected: false }\r\n                    node.state[event] = state\r\n                    if (node.nodes) {\r\n                        _this.recCallNodes(state, event, node.nodes)\r\n                    }\r\n                })\r\n            },\r\n            callNodesChecked (state) {\r\n                this.checked = state\r\n                for (let i = 0; i < this.$children.length; i++) {\r\n                    this.$children[i].callNodesChecked(state)\r\n                }\r\n                if (this.$children.length === 0 && this.node.nodes && this.node.nodes.length > 0) {\r\n                    this.recCallNodes(state, 'checked', this.node.nodes)\r\n                }\r\n            },\r\n            callNodesDeselect () {\r\n                this.selected = false\r\n                this.node.state.selected = this.selected\r\n                for (let i = 0; i < this.$children.length; i++) {\r\n                    this.$children[i].callNodesDeselect()\r\n                }\r\n                if (this.$children.length === 0 && this.node.nodes && this.node.nodes.length > 0) {\r\n                    this.recCallNodes(false, 'selected', this.node.nodes)\r\n                }\r\n            },\r\n            callSpecificChild (arrIds, fname, args) {\r\n                for (let i = 0; i < this.$children.length; i++) {\r\n                    let currentNodeId = this.$children[i].$props.node.id\r\n                    if (arrIds.find(x => x == currentNodeId)) {\r\n                        this.$children[i][fname](args)\r\n                        return false\r\n                    }\r\n                }\r\n            },\r\n            callNodeChecked (args) {\r\n                const arrIds = args.arrIds\r\n                const value = args.value\r\n                if (arrIds[arrIds.length - 1] == this.node.id) {\r\n                    this.checked = value\r\n                    this.callNodesChecked(this.checked)\r\n                } else {\r\n                    this.expanded = true\r\n                    this.$nextTick(() => {\r\n                        this.callSpecificChild(arrIds, 'callNodeChecked', args)\r\n                    })\r\n                }\r\n            },\r\n            callNodeSelected (args) {\r\n                const arrIds = args.arrIds\r\n                const value = args.value\r\n                if (arrIds[arrIds.length - 1] == this.node.id) {\r\n                    this.selected = value\r\n                } else {\r\n                    // this.expanded = true\r\n                    this.$nextTick(() => {\r\n                        this.callSpecificChild(arrIds, 'callNodeSelected', args)\r\n                    })\r\n                }\r\n            },\r\n            callNodeExpanded (args) {\r\n                const arrIds = args.arrIds\r\n                const value = args.value\r\n                if (value === false && this.expanded === false) return\r\n                if (arrIds[arrIds.length - 1] != this.node.id) {\r\n                    if (value === true) {\r\n                        this.expanded = true\r\n                        this.$nextTick(() => {\r\n                            this.callSpecificChild(arrIds, 'callNodeExpanded', args)\r\n                        })\r\n                    } else {\r\n                        this.callSpecificChild(arrIds, 'callNodeExpanded', args)\r\n                    }\r\n                } else {\r\n                    this.expanded = value\r\n                }\r\n            },\r\n            copyOptions (src, dst) {\r\n                for (var key in src) {\r\n                    if (!dst[key]) {\r\n                        dst[key] = src[key]\r\n                    } else if (typeof (src[key]) === 'object') {\r\n                        this.copyOptions(src[key], dst[key])\r\n                    } else {\r\n                        dst[key] = src[key]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .small-tree-indent {\r\n        margin: 0 3px;\r\n        display: inline-block;\r\n    }\r\n    .icon-hover {\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        transition: all .2s ease-in-out;\r\n    }\r\n    .row_data:hover .icon-hover{\r\n        visibility: visible;\r\n        opacity: 1;\r\n    }\r\n    .capitalize {\r\n        text-transform: capitalize;\r\n    }\r\n    .badge {\r\n        font-size: 12px;\r\n        font-weight: normal;\r\n    }\r\n    li {\r\n        list-style: none;\r\n    }\r\n    .icon_parent {\r\n        background: transparent;\r\n        width: 20px;\r\n        height: 20px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        text-align: center;\r\n        margin: 0 2px 0 0;\r\n    }\r\n    .icon_parent i {\r\n        font-size: 16px;\r\n        line-height: 10px;\r\n    }\r\n    .expanded_icon {\r\n        transform: rotate(0deg);\r\n        transition: all ease .2s;\r\n        display: inline-block;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 4px 0 4px 8px;\r\n        border-color: transparent transparent transparent #FFF;\r\n    }\r\n    .expanded_icon.expanded {\r\n        transform: rotate(90deg);\r\n    }\r\n    .add_icon:before {\r\n        content: '\\002b';\r\n    }\r\n    .delete_icon:before {\r\n        content: '\\00d7';\r\n    }\r\n    .circle_icon:before {\r\n        content: '\\2B24';\r\n    }\r\n    .tag_icon:before {\r\n        content: '\\25C0';\r\n    }\r\n    .bars_icon:before {\r\n        content: '\\2630';\r\n    }\r\n    .reference_icon:before {\r\n        content: '\\1F5D8';\r\n    }\r\n    .method_icon:before {\r\n        content: '\\02A0D';\r\n    }\r\n    .folder_icon:before {\r\n        content: '\\1F5C0';\r\n    }\r\n    .folder_icon_active:before {\r\n        content: '\\1F5C1';\r\n    }\r\n</style>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"li\",\n    {\n      staticClass: \"node\",\n      style: _vm.styles.row.style,\n      attrs: { \"data-id\": _vm.node.id }\n    },\n    [\n      _c(\n        \"div\",\n        {\n          class: [\n            \"row_data\",\n            _vm.selected\n              ? _vm.styles.row.child.active.class\n              : _vm.styles.row.child.class\n          ],\n          style: _vm.selected\n            ? _vm.styles.row.child.active.style\n            : _vm.styles.row.child.style,\n          on: {\n            click: function($event) {\n              return _vm.toggleEvent(\"selected\", _vm.node)\n            },\n            contextmenu: function($event) {\n              $event.stopPropagation()\n              return _vm.toggleEvent(\"context\", _vm.node, $event)\n            }\n          }\n        },\n        [\n          _c(\n            \"span\",\n            {\n              on: {\n                click: function($event) {\n                  $event.stopPropagation()\n                  _vm.options.events.expanded.state == true &&\n                    _vm.node.nodes != undefined &&\n                    _vm.node.nodes.length > 0 &&\n                    _vm.toggleEvent(\"expanded\", _vm.node)\n                }\n              }\n            },\n            [\n              _vm.options.events.expanded.state == true &&\n              _vm.node.nodes != undefined &&\n              _vm.node.nodes.length > 0\n                ? _c(\"i\", {\n                    class: [\n                      { expanded: _vm.expanded == true },\n                      _vm.styles.expanded.class\n                    ]\n                  })\n                : _vm.options.events.expanded.state == true &&\n                  _vm.node.nodes == undefined\n                ? _c(\"span\", { staticClass: \"small-tree-indent\" })\n                : _vm._e()\n            ]\n          ),\n          _vm._v(\" \"),\n          _vm.options.events.selected.state == true\n            ? _c(\"i\", {\n                class: _vm.node.nodeIcon.class,\n                style: { color: _vm.node.nodeIcon.color },\n                on: {\n                  click: function($event) {\n                    $event.stopPropagation()\n                    return _vm.toggleEvent(\"selected\", _vm.node)\n                  }\n                }\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.options.events.checked.state == true\n            ? _c(\"input\", {\n                attrs: {\n                  type: \"checkbox\",\n                  name: \"item[]\",\n                  \"data-id\": _vm.node.id\n                },\n                domProps: { checked: _vm.checked },\n                on: {\n                  click: function($event) {\n                    $event.stopPropagation()\n                    return _vm.toggleEvent(\"checked\", _vm.node)\n                  }\n                }\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            {\n              class: [{ selected: _vm.selected }, _vm.styles.text.class],\n              style: _vm.selected\n                ? _vm.styles.text.active.style\n                : _vm.styles.text.style,\n              attrs: {\n                \"data-toggle\": \"tooltip\",\n                \"data-placement\": \"top\",\n                title: _vm.node.definition\n              },\n              on: {\n                click: function($event) {\n                  $event.stopPropagation()\n                  return _vm.toggleEvent(\"selected\", _vm.node)\n                }\n              }\n            },\n            [\n              _vm._v(\n                \"\\n                \" + _vm._s(_vm.node.text) + \"\\n        \"\n              )\n            ]\n          ),\n          _vm._v(\" \"),\n          _vm.options.addNode.state == true\n            ? _c(\n                \"span\",\n                {\n                  staticClass: \"icon_parent\",\n                  on: {\n                    click: function($event) {\n                      $event.stopPropagation()\n                      return _vm.options.addNode.fn(_vm.node)\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", {\n                    class: [\n                      { \"icon-hover\": _vm.options.addNode.appearOnHover },\n                      _vm.styles.addNode.class\n                    ],\n                    style: _vm.styles.addNode.style\n                  })\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.options.deleteNode.state == true\n            ? _c(\n                \"span\",\n                {\n                  staticClass: \"icon_parent\",\n                  on: {\n                    click: function($event) {\n                      $event.stopPropagation()\n                      return _vm.options.deleteNode.fn(_vm.node)\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", {\n                    class: [\n                      { \"icon-hover\": _vm.options.deleteNode.appearOnHover },\n                      _vm.styles.deleteNode.class\n                    ],\n                    style: _vm.styles.deleteNode.style\n                  })\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.options.showTags == true && _vm.node.tags\n            ? _c(\"span\", [\n                _vm.node.tags[0] != undefined &&\n                _vm.node.tags[0] != null &&\n                _vm.node.tags[0]\n                  ? _c(\"span\", { staticClass: \"badge\" }, [\n                      _vm._v(\"\\n      \" + _vm._s(_vm.node.tags[0]) + \"\\n    \")\n                    ])\n                  : _vm._e()\n              ])\n            : _vm._e()\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm.expanded\n        ? _c(\n            \"ul\",\n            { style: _vm.styles.rowIndent },\n            _vm._l(_vm.node.nodes, function(child) {\n              return _c(\"tree-row\", {\n                key: child.id,\n                ref: \"tree-row-\" + child.id,\n                refInFor: true,\n                attrs: {\n                  \"custom-options\": _vm.customOptions,\n                  \"custom-styles\": _vm.customStyles,\n                  depth: _vm.depth + 1,\n                  node: child,\n                  \"parent-node\": _vm.node\n                },\n                on: {\n                  emitNodeChecked: _vm.emitNodeChecked,\n                  emitNodeContext: _vm.emitNodeContext,\n                  emitNodeExpanded: _vm.emitNodeExpanded,\n                  emitNodeSelected: _vm.emitNodeSelected\n                }\n              })\n            }),\n            1\n          )\n        : _vm._e()\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-ff1265b4\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var disposed = false\nfunction injectStyle (context) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ff1265b4\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./TreeRow.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./TreeRow.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./TreeRow.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ff1265b4\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./TreeRow.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ff1265b4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\TreeRow.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-ff1265b4\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-ff1265b4\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","<template>\r\n    <div :id=\"id\">\r\n        <ul\r\n                :style=\"styles.tree\"\r\n                v-if=\"force\">\r\n            <tree-row\r\n                    v-for=\"node in nodes\"\r\n                    :ref=\"'tree-row-' + node.id\"\r\n                    :custom-options=\"customOptions\"\r\n                    :custom-styles=\"customStyles\"\r\n                    :depth=\"1\"\r\n                    :key=\"node.id\"\r\n                    :node=\"node\"\r\n                    :parent-node=\"node\"\r\n                    v-on:emitNodeContext=\"onNodeContext\"\r\n                    v-on:emitNodeChecked=\"onNodeChecked\"\r\n                    v-on:emitNodeExpanded=\"onNodeExpanded\"\r\n                    v-on:emitNodeSelected=\"onNodeSelected\">\r\n            </tree-row>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import TreeRow from './TreeRow.vue'\r\n\r\n    export default {\r\n        name: 'tree',\r\n        props: {\r\n            customOptions: {\r\n                default: () => { return {} },\r\n                type: Object\r\n            },\r\n            customStyles: {\r\n                default: () => { return {} },\r\n                type: Object\r\n            },\r\n            id: {\r\n                default: 'tree',\r\n                type: String\r\n            },\r\n            nodes: {\r\n                type: Array,\r\n                required: true\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                styles: {\r\n                    tree: {\r\n                        height: 'auto',\r\n                        maxHeight: '500px',\r\n                        overflowY: 'scroll',\r\n                        display: 'inline-block'\r\n                    }\r\n                },\r\n                options: {\r\n                    treeEvents: {\r\n                        expanded: {\r\n                            state: false,\r\n                            fn: null\r\n                        },\r\n                        collapsed: {\r\n                            state: false,\r\n                            fn: null\r\n                        },\r\n                        selected: {\r\n                            state: false,\r\n                            fn: null\r\n                        },\r\n                        checked: {\r\n                            state: false,\r\n                            fn: null\r\n                        }\r\n                    }\r\n                },\r\n                selectedNode: null,\r\n                force: true\r\n            }\r\n        },\r\n        components: {\r\n            'tree-row': TreeRow\r\n        },\r\n        mounted () {\r\n            this.copyOptions(this.customOptions, this.options)\r\n            this.copyOptions(this.customStyles, this.styles)\r\n        },\r\n        methods: {\r\n            forceRender (nodes) {\r\n                const _this = this\r\n                this.nodes = []\r\n                this.$nextTick(() => {\r\n                    _this.nodes = nodes\r\n                })\r\n            },\r\n            copyOptions (src, dst) {\r\n                for (var key in src) {\r\n                    if (!dst[key]) {\r\n                        dst[key] = src[key]\r\n                    } else if (typeof (src[key]) === 'object') {\r\n                        this.copyOptions(src[key], dst[key])\r\n                    } else {\r\n                        dst[key] = src[key]\r\n                    }\r\n                }\r\n            },\r\n            recFindNodePath (nodeId, nodes, depth, maxDepth) {\r\n                const _this = this\r\n                let ret = []\r\n\r\n                nodes.forEach((node) => {\r\n                    let tmp = []\r\n                    if (nodeId == node.id && maxDepth >= depth) {\r\n                        ret.unshift(node.id)\r\n                        return false\r\n                    } else if (node.nodes && maxDepth > depth && (tmp = _this.recFindNodePath(nodeId, node.nodes, depth + 1, maxDepth)) != null && tmp.length > 0) {\r\n                        tmp.unshift(node.id)\r\n                        ret = tmp\r\n                        return false\r\n                    }\r\n                })\r\n\r\n                return ret\r\n            },\r\n            findNodePath (nodeId, maxDepth = 9999) {\r\n                return this.recFindNodePath(nodeId, this.nodes, 1, maxDepth)\r\n            },\r\n            recFindNode (nodeId, nodes, depth, maxDepth) {\r\n                const _this = this\r\n                let ret = null\r\n\r\n                nodes.forEach((node) => {\r\n                    let tmp = []\r\n                    if (nodeId == node.id && maxDepth >= depth) {\r\n                        ret = node\r\n                        return false\r\n                    } else if (node.nodes && maxDepth > depth && (tmp = _this.recFindNode(nodeId, node.nodes, depth + 1, maxDepth)) != null) {\r\n                        ret = tmp\r\n                        return false\r\n                    }\r\n                })\r\n\r\n                return ret\r\n            },\r\n            findNode (nodeId, maxDepth = 9999) {\r\n                return this.recFindNode(nodeId, this.nodes, 1, maxDepth)\r\n            },\r\n            onNodeSelected (nodeSelected) { // called when a TreeRow is selected\r\n                const _this = this\r\n\r\n                if (this.selectedNode == null && nodeSelected.state.selected === true) {\r\n                    this.selectedNode = nodeSelected\r\n                } else if (this.selectedNode != null && nodeSelected.state.selected === false) {\r\n                    this.selectedNode = null\r\n                } else if (this.selectedNode != null && nodeSelected.state.selected === true) {\r\n                    const arrIds = this.findNodePath(this.selectedNode.id, this.selectedNode.depth)\r\n                    this.callSpecificChild(arrIds, 'callNodeSelected', { value: false, arrIds: arrIds })\r\n                    this.selectedNode = nodeSelected\r\n                    this.$nextTick(() => {\r\n                        if (_this.selectedNode) {\r\n                            const selectArrIds = _this.findNodePath(_this.selectedNode.id, _this.selectedNode.depth)\r\n                            _this.callSpecificChild(selectArrIds, 'callNodeSelected', { value: true, arrIds: selectArrIds })\r\n                        }\r\n                    })\r\n                }\r\n\r\n                let fn = null\r\n                if (this.options.treeEvents.selected && this.options.treeEvents.selected.state === true) {\r\n                    fn = this.customOptions.treeEvents.selected.fn\r\n                }\r\n                const state = (this.selectedNode !== null)\r\n                if (fn) {\r\n                    fn(nodeSelected, state)\r\n                }\r\n            },\r\n            onNodeExpanded (node, state) { // called when a TreeRow is expanded or closed\r\n                let fn = null\r\n                if (state === true && this.options.treeEvents.expanded && this.options.treeEvents.expanded.state === true) {\r\n                    fn = this.customOptions.treeEvents.expanded.fn\r\n                } else if (this.options.treeEvents.collapsed && this.options.treeEvents.collapsed.state === true) {\r\n                    fn = this.customOptions.treeEvents.collapsed.fn\r\n                }\r\n                if (fn) {\r\n                    fn(node.id, state)\r\n                }\r\n            },\r\n            onNodeChecked (node) { // called when a TreeRow is checked\r\n                let fn = null\r\n                if (this.options.treeEvents.checked && this.options.treeEvents.checked.state === true) {\r\n                    fn = this.customOptions.treeEvents.checked.fn\r\n                }\r\n                const state = node.state.checked\r\n                if (fn) {\r\n                    fn(node.id, state)\r\n                }\r\n            },\r\n            onNodeContext (node, event) { // called when a TreeRow is right-clicked\r\n                let fn = null\r\n                if (this.options.treeEvents.context && this.options.treeEvents.context.state === true) {\r\n                    fn = this.customOptions.treeEvents.context.fn\r\n                }\r\n                if (fn) {\r\n                    fn(node, event)\r\n                }\r\n            },\r\n            callSpecificChild (arrIds, fname, args) {\r\n                for (let id of arrIds) {\r\n                    const childs = this.$refs['tree-row-' + id]\r\n                    if (childs) {\r\n                        childs[0][fname](args)\r\n                    }\r\n                }\r\n            },\r\n            doCheckNode (nodeId, depth, state) {\r\n                const arrIds = this.findNodePath(nodeId, depth)\r\n                if (!arrIds) return\r\n                this.callSpecificChild(arrIds, 'callNodeChecked', {\r\n                    value: state,\r\n                    arrIds: arrIds\r\n                })\r\n            },\r\n            checkNode (nodeId, depth) {\r\n                this.doCheckNode(nodeId, depth, true)\r\n            },\r\n            uncheckNode (nodeId, depth) {\r\n                this.doCheckNode(nodeId, depth, false)\r\n            },\r\n            getSelectedNode () {\r\n                return this.selectedNode\r\n            },\r\n            getCheckedNodes (argWanted, format = false) {\r\n                return this.getNodesData(argWanted, { checked: true }, format)\r\n            },\r\n            getExpandedNodes (argWanted, format = false) {\r\n                return this.getNodesData(argWanted, { expanded: true }, format)\r\n            },\r\n            checkAllNodes () {\r\n                this.callSpecificChild(this.nodes.map(x => x.id), 'callNodesChecked', true)\r\n            },\r\n            uncheckAllNodes () {\r\n                this.callSpecificChild(this.nodes.map(x => x.id), 'callNodesChecked', false)\r\n            },\r\n            recExpandAllNodes (nodes) {\r\n                let hasChild = false\r\n                for (let node of nodes) {\r\n                    if (node.nodes) {\r\n                        hasChild = true\r\n                        if (this.recExpandAllNodes(node.nodes) === false) {\r\n                            this.expandNode(node.id)\r\n                        }\r\n                    }\r\n                }\r\n                return hasChild\r\n            },\r\n            expandAllNodes () {\r\n                this.recExpandAllNodes(this.nodes)\r\n            },\r\n            recCollapseAllNodes (arrIds) {\r\n                for (let id of arrIds) {\r\n                    this.findNode(id).state.expanded = false\r\n                }\r\n            },\r\n            collapseAllNodes () {\r\n                this.recCollapseAllNodes(this.getExpandedNodes('id'))\r\n                for (let node of this.nodes) {\r\n                    this.collapseNode(node.id)\r\n                }\r\n            },\r\n            deselectAllNodes () {\r\n                this.selectedNode = null\r\n                this.callSpecificChild(this.nodes.map(x => x.id), 'callNodesDeselect')\r\n            },\r\n            expandNode (nodeId, depth) {\r\n                const arrIds = this.findNodePath(nodeId, depth)\r\n                this.callSpecificChild(arrIds, 'callNodeExpanded', {\r\n                    value: true,\r\n                    arrIds: arrIds\r\n                })\r\n            },\r\n            selectNode (nodeId, depth) {\r\n                const nodeSelected = this.findNode(nodeId, depth)\r\n                const _this = this\r\n\r\n                if (this.selectedNode) {\r\n                    let arrIds = this.findNodePath(this.selectedNode.id, this.selectedNode.depth)\r\n                    this.callSpecificChild(arrIds, 'callNodeSelected', { value: false, arrIds: arrIds })\r\n                }\r\n                this.selectedNode = nodeSelected\r\n\r\n                if (this.selectedNode) {\r\n                    this.$nextTick(() => {\r\n                        const selectArrIds = _this.findNodePath(_this.selectedNode.id, _this.selectedNode.depth)\r\n                        _this.callSpecificChild(selectArrIds, 'callNodeSelected', { value: true, arrIds: selectArrIds })\r\n                    })\r\n                }\r\n            },\r\n            collapseNode (nodeId, depth) {\r\n                const arrIds = this.findNodePath(nodeId, depth)\r\n                this.callSpecificChild(arrIds, 'callNodeExpanded', {\r\n                    value: false,\r\n                    arrIds: arrIds\r\n                })\r\n            },\r\n            recGetVisibleNodes (arr, elem, fullNode) {\r\n                if (elem.node) {\r\n                    arr.push((fullNode ? elem.node : elem.node.id))\r\n                }\r\n                for (let child of Object.values(elem.$refs)) {\r\n                    if (child && child[0]) {\r\n                        this.recGetVisibleNodes(arr, child[0], fullNode)\r\n                    }\r\n                }\r\n            },\r\n            getVisibleNodes (fullNode = false) {\r\n                let arr = []\r\n                this.recGetVisibleNodes(arr, this, fullNode)\r\n                return arr\r\n            },\r\n            recGetNodesData (argWanted, conditions, nodes) {\r\n                const _this = this\r\n                let arr = []\r\n                if (nodes === undefined) return arr\r\n                nodes.forEach((node) => {\r\n                    if (node.state && Object.keys(node.state).filter(key => conditions[key] === node.state[key]).length === Object.keys(conditions).length) {\r\n                        if (Array.isArray(argWanted)) {\r\n                            arr.push(Object.keys(node).filter(key => argWanted.includes(key)).reduce((obj, key) => {\r\n                                obj[key] = node[key]\r\n                                return obj\r\n                            }, {}))\r\n                        } else {\r\n                            arr.push(node[argWanted])\r\n                        }\r\n                    }\r\n                    arr = arr.concat(_this.recGetNodesData(argWanted, conditions, node.nodes))\r\n                })\r\n                return arr\r\n            },\r\n            recGetNodesDataWithFormat (argWanted, conditions, nodes) {\r\n                const _this = this\r\n                let arr = {}\r\n                if (nodes === undefined || nodes.length === 0) return arr\r\n                nodes.forEach((node) => {\r\n                    if (node.state && Object.keys(node.state).filter(key => conditions[key] === node.state[key]).length === Object.keys(conditions).length) {\r\n                        arr[node.id] = _this.recGetNodesDataWithFormat(argWanted, conditions, node.nodes)\r\n                    } else {\r\n                        Object.assign(arr, _this.recGetNodesDataWithFormat(argWanted, conditions, node.nodes))\r\n                    }\r\n                })\r\n                return arr\r\n            },\r\n            getNodesData (argWanted, conditions = {}, format = false) {\r\n                // argWanted: id -> return id, id1 etc... argWanted: id, name -> return {id: id, name: name}, {id: id1, name: name1}, etc\r\n                // conditions {checked: true} conditions {checked: true, selected: true}\r\n                let arr = null\r\n                if (format === false) {\r\n                    arr = this.recGetNodesData(argWanted, conditions, this.nodes)\r\n                } else {\r\n                    arr = this.recGetNodesDataWithFormat(argWanted, conditions, this.nodes)\r\n                }\r\n                return arr\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: _vm.id } }, [\n    _vm.force\n      ? _c(\n          \"ul\",\n          { style: _vm.styles.tree },\n          _vm._l(_vm.nodes, function(node) {\n            return _c(\"tree-row\", {\n              key: node.id,\n              ref: \"tree-row-\" + node.id,\n              refInFor: true,\n              attrs: {\n                \"custom-options\": _vm.customOptions,\n                \"custom-styles\": _vm.customStyles,\n                depth: 1,\n                node: node,\n                \"parent-node\": node\n              },\n              on: {\n                emitNodeContext: _vm.onNodeContext,\n                emitNodeChecked: _vm.onNodeChecked,\n                emitNodeExpanded: _vm.onNodeExpanded,\n                emitNodeSelected: _vm.onNodeSelected\n              }\n            })\n          }),\n          1\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-b9bb4578\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./Tree.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./Tree.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b9bb4578\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./Tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\Tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-b9bb4578\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-b9bb4578\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n"],"sourceRoot":""}